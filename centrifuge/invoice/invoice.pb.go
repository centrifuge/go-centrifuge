// Code generated by protoc-gen-go. DO NOT EDIT.
// source: invoice/invoice.proto

/*
Package invoice is a generated protocol buffer package.

It is generated from these files:
	invoice/invoice.proto

It has these top-level messages:
	InvoiceData
	InvoiceDocument
	SendInvoiceEnvelope
	GetInvoiceDocumentEnvelope
	ReceivedInvoices
*/
package invoice

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"
import google_protobuf2 "github.com/golang/protobuf/ptypes/empty"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
import coredocument "github.com/CentrifugeInc/go-centrifuge/centrifuge/coredocument"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// InvoiceData is the default invoice schema
type InvoiceData struct {
	Country     string                      `protobuf:"bytes,2,opt,name=country" json:"country,omitempty"`
	Currency    string                      `protobuf:"bytes,3,opt,name=currency" json:"currency,omitempty"`
	Amount      int64                       `protobuf:"varint,4,opt,name=amount" json:"amount,omitempty"`
	Recipient   []byte                      `protobuf:"bytes,5,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Sender      []byte                      `protobuf:"bytes,6,opt,name=sender,proto3" json:"sender,omitempty"`
	Payee       []byte                      `protobuf:"bytes,7,opt,name=payee,proto3" json:"payee,omitempty"`
	Comment     string                      `protobuf:"bytes,8,opt,name=comment" json:"comment,omitempty"`
	DueDate     *google_protobuf1.Timestamp `protobuf:"bytes,9,opt,name=due_date,json=dueDate" json:"due_date,omitempty"`
	DateCreated *google_protobuf1.Timestamp `protobuf:"bytes,11,opt,name=date_created,json=dateCreated" json:"date_created,omitempty"`
}

func (m *InvoiceData) Reset()                    { *m = InvoiceData{} }
func (m *InvoiceData) String() string            { return proto.CompactTextString(m) }
func (*InvoiceData) ProtoMessage()               {}
func (*InvoiceData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *InvoiceData) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *InvoiceData) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *InvoiceData) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *InvoiceData) GetRecipient() []byte {
	if m != nil {
		return m.Recipient
	}
	return nil
}

func (m *InvoiceData) GetSender() []byte {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *InvoiceData) GetPayee() []byte {
	if m != nil {
		return m.Payee
	}
	return nil
}

func (m *InvoiceData) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *InvoiceData) GetDueDate() *google_protobuf1.Timestamp {
	if m != nil {
		return m.DueDate
	}
	return nil
}

func (m *InvoiceData) GetDateCreated() *google_protobuf1.Timestamp {
	if m != nil {
		return m.DateCreated
	}
	return nil
}

type InvoiceDocument struct {
	CoreDocument *coredocument.CoreDocument `protobuf:"bytes,1,opt,name=core_document,json=coreDocument" json:"core_document,omitempty"`
	Data         *InvoiceData               `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (m *InvoiceDocument) Reset()                    { *m = InvoiceDocument{} }
func (m *InvoiceDocument) String() string            { return proto.CompactTextString(m) }
func (*InvoiceDocument) ProtoMessage()               {}
func (*InvoiceDocument) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *InvoiceDocument) GetCoreDocument() *coredocument.CoreDocument {
	if m != nil {
		return m.CoreDocument
	}
	return nil
}

func (m *InvoiceDocument) GetData() *InvoiceData {
	if m != nil {
		return m.Data
	}
	return nil
}

type SendInvoiceEnvelope struct {
	// Centrifuge OS Entity of the recipient
	Recipients [][]byte         `protobuf:"bytes,1,rep,name=recipients,proto3" json:"recipients,omitempty"`
	Document   *InvoiceDocument `protobuf:"bytes,10,opt,name=document" json:"document,omitempty"`
}

func (m *SendInvoiceEnvelope) Reset()                    { *m = SendInvoiceEnvelope{} }
func (m *SendInvoiceEnvelope) String() string            { return proto.CompactTextString(m) }
func (*SendInvoiceEnvelope) ProtoMessage()               {}
func (*SendInvoiceEnvelope) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SendInvoiceEnvelope) GetRecipients() [][]byte {
	if m != nil {
		return m.Recipients
	}
	return nil
}

func (m *SendInvoiceEnvelope) GetDocument() *InvoiceDocument {
	if m != nil {
		return m.Document
	}
	return nil
}

type GetInvoiceDocumentEnvelope struct {
	DocumentIdentifier []byte `protobuf:"bytes,1,opt,name=document_identifier,json=documentIdentifier,proto3" json:"document_identifier,omitempty"`
}

func (m *GetInvoiceDocumentEnvelope) Reset()                    { *m = GetInvoiceDocumentEnvelope{} }
func (m *GetInvoiceDocumentEnvelope) String() string            { return proto.CompactTextString(m) }
func (*GetInvoiceDocumentEnvelope) ProtoMessage()               {}
func (*GetInvoiceDocumentEnvelope) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetInvoiceDocumentEnvelope) GetDocumentIdentifier() []byte {
	if m != nil {
		return m.DocumentIdentifier
	}
	return nil
}

type ReceivedInvoices struct {
	Invoices []*InvoiceDocument `protobuf:"bytes,1,rep,name=invoices" json:"invoices,omitempty"`
}

func (m *ReceivedInvoices) Reset()                    { *m = ReceivedInvoices{} }
func (m *ReceivedInvoices) String() string            { return proto.CompactTextString(m) }
func (*ReceivedInvoices) ProtoMessage()               {}
func (*ReceivedInvoices) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReceivedInvoices) GetInvoices() []*InvoiceDocument {
	if m != nil {
		return m.Invoices
	}
	return nil
}

func init() {
	proto.RegisterType((*InvoiceData)(nil), "invoice.InvoiceData")
	proto.RegisterType((*InvoiceDocument)(nil), "invoice.InvoiceDocument")
	proto.RegisterType((*SendInvoiceEnvelope)(nil), "invoice.SendInvoiceEnvelope")
	proto.RegisterType((*GetInvoiceDocumentEnvelope)(nil), "invoice.GetInvoiceDocumentEnvelope")
	proto.RegisterType((*ReceivedInvoices)(nil), "invoice.ReceivedInvoices")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for InvoiceDocumentService service

type InvoiceDocumentServiceClient interface {
	SendInvoiceDocument(ctx context.Context, in *SendInvoiceEnvelope, opts ...grpc.CallOption) (*InvoiceDocument, error)
	GetInvoiceDocument(ctx context.Context, in *GetInvoiceDocumentEnvelope, opts ...grpc.CallOption) (*InvoiceDocument, error)
	GetReceivedInvoiceDocuments(ctx context.Context, in *google_protobuf2.Empty, opts ...grpc.CallOption) (*ReceivedInvoices, error)
}

type invoiceDocumentServiceClient struct {
	cc *grpc.ClientConn
}

func NewInvoiceDocumentServiceClient(cc *grpc.ClientConn) InvoiceDocumentServiceClient {
	return &invoiceDocumentServiceClient{cc}
}

func (c *invoiceDocumentServiceClient) SendInvoiceDocument(ctx context.Context, in *SendInvoiceEnvelope, opts ...grpc.CallOption) (*InvoiceDocument, error) {
	out := new(InvoiceDocument)
	err := grpc.Invoke(ctx, "/invoice.InvoiceDocumentService/SendInvoiceDocument", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *invoiceDocumentServiceClient) GetInvoiceDocument(ctx context.Context, in *GetInvoiceDocumentEnvelope, opts ...grpc.CallOption) (*InvoiceDocument, error) {
	out := new(InvoiceDocument)
	err := grpc.Invoke(ctx, "/invoice.InvoiceDocumentService/GetInvoiceDocument", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *invoiceDocumentServiceClient) GetReceivedInvoiceDocuments(ctx context.Context, in *google_protobuf2.Empty, opts ...grpc.CallOption) (*ReceivedInvoices, error) {
	out := new(ReceivedInvoices)
	err := grpc.Invoke(ctx, "/invoice.InvoiceDocumentService/GetReceivedInvoiceDocuments", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for InvoiceDocumentService service

type InvoiceDocumentServiceServer interface {
	SendInvoiceDocument(context.Context, *SendInvoiceEnvelope) (*InvoiceDocument, error)
	GetInvoiceDocument(context.Context, *GetInvoiceDocumentEnvelope) (*InvoiceDocument, error)
	GetReceivedInvoiceDocuments(context.Context, *google_protobuf2.Empty) (*ReceivedInvoices, error)
}

func RegisterInvoiceDocumentServiceServer(s *grpc.Server, srv InvoiceDocumentServiceServer) {
	s.RegisterService(&_InvoiceDocumentService_serviceDesc, srv)
}

func _InvoiceDocumentService_SendInvoiceDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendInvoiceEnvelope)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InvoiceDocumentServiceServer).SendInvoiceDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/invoice.InvoiceDocumentService/SendInvoiceDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InvoiceDocumentServiceServer).SendInvoiceDocument(ctx, req.(*SendInvoiceEnvelope))
	}
	return interceptor(ctx, in, info, handler)
}

func _InvoiceDocumentService_GetInvoiceDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInvoiceDocumentEnvelope)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InvoiceDocumentServiceServer).GetInvoiceDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/invoice.InvoiceDocumentService/GetInvoiceDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InvoiceDocumentServiceServer).GetInvoiceDocument(ctx, req.(*GetInvoiceDocumentEnvelope))
	}
	return interceptor(ctx, in, info, handler)
}

func _InvoiceDocumentService_GetReceivedInvoiceDocuments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf2.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InvoiceDocumentServiceServer).GetReceivedInvoiceDocuments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/invoice.InvoiceDocumentService/GetReceivedInvoiceDocuments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InvoiceDocumentServiceServer).GetReceivedInvoiceDocuments(ctx, req.(*google_protobuf2.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _InvoiceDocumentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "invoice.InvoiceDocumentService",
	HandlerType: (*InvoiceDocumentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendInvoiceDocument",
			Handler:    _InvoiceDocumentService_SendInvoiceDocument_Handler,
		},
		{
			MethodName: "GetInvoiceDocument",
			Handler:    _InvoiceDocumentService_GetInvoiceDocument_Handler,
		},
		{
			MethodName: "GetReceivedInvoiceDocuments",
			Handler:    _InvoiceDocumentService_GetReceivedInvoiceDocuments_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "invoice/invoice.proto",
}

func init() { proto.RegisterFile("invoice/invoice.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 702 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0x5d, 0x6e, 0xd3, 0x4a,
	0x18, 0x95, 0xd3, 0x9f, 0xa4, 0x93, 0xf4, 0xde, 0x6a, 0x9a, 0x1b, 0xf9, 0xba, 0x11, 0x58, 0x86,
	0x87, 0xa8, 0xa2, 0x76, 0x09, 0x20, 0x95, 0x48, 0x08, 0x4a, 0x5a, 0x95, 0x3c, 0x20, 0x90, 0xcb,
	0x13, 0x2f, 0x91, 0x3b, 0xfe, 0xea, 0x0c, 0x38, 0x33, 0x96, 0x3d, 0x0e, 0x8a, 0x00, 0x21, 0xb1,
	0x04, 0xd8, 0x00, 0xbb, 0x60, 0x21, 0x2c, 0x80, 0x17, 0x56, 0xc0, 0x0a, 0x90, 0xc7, 0x1e, 0x27,
	0x4d, 0xda, 0xf2, 0xe4, 0x9c, 0x39, 0x67, 0xbe, 0x73, 0xe6, 0x78, 0x62, 0xf4, 0x1f, 0x65, 0x13,
	0x4e, 0x09, 0x38, 0xc5, 0xd3, 0x8e, 0x62, 0x2e, 0x38, 0xae, 0x16, 0xd0, 0x68, 0x07, 0x9c, 0x07,
	0x21, 0x38, 0x5e, 0x44, 0x1d, 0x8f, 0x31, 0x2e, 0x3c, 0x41, 0x39, 0x4b, 0x72, 0x99, 0x71, 0xb3,
	0x60, 0x25, 0x3a, 0x4b, 0xcf, 0x1d, 0x41, 0xc7, 0x90, 0x08, 0x6f, 0x1c, 0x15, 0x82, 0x9d, 0x45,
	0x01, 0x8c, 0x23, 0x31, 0x2d, 0xc8, 0x3b, 0xf2, 0x41, 0xf6, 0x02, 0x60, 0x7b, 0xc9, 0x3b, 0x2f,
	0x08, 0x20, 0x76, 0x78, 0x24, 0xe7, 0x5f, 0xe6, 0x45, 0x78, 0x0c, 0x3e, 0x27, 0xe9, 0x18, 0x98,
	0x70, 0xe6, 0x41, 0x2e, 0xb0, 0xbe, 0x57, 0x50, 0x7d, 0x90, 0xc7, 0x3e, 0xf2, 0x84, 0x87, 0x75,
	0x54, 0x25, 0x3c, 0x65, 0x22, 0x9e, 0xea, 0x15, 0x53, 0xeb, 0x6c, 0xb8, 0x0a, 0x62, 0x03, 0xd5,
	0x48, 0x1a, 0xc7, 0xc0, 0xc8, 0x54, 0x5f, 0x91, 0x54, 0x89, 0x71, 0x0b, 0xad, 0x7b, 0xe3, 0x4c,
	0xa7, 0xaf, 0x9a, 0x5a, 0x67, 0xc5, 0x2d, 0x10, 0x6e, 0xa3, 0x8d, 0x18, 0x08, 0x8d, 0x28, 0x30,
	0xa1, 0xaf, 0x99, 0x5a, 0xa7, 0xe1, 0xce, 0x16, 0xb2, 0x5d, 0x09, 0x30, 0x1f, 0x62, 0x7d, 0x5d,
	0x52, 0x05, 0xc2, 0x4d, 0xb4, 0x16, 0x79, 0x53, 0x00, 0xbd, 0x2a, 0x97, 0x73, 0x90, 0x27, 0x1b,
	0x67, 0xd1, 0xf5, 0x9a, 0x4a, 0x26, 0x21, 0x7e, 0x80, 0x6a, 0x7e, 0x0a, 0x43, 0xdf, 0x13, 0xa0,
	0x6f, 0x98, 0x5a, 0xa7, 0xde, 0x35, 0xec, 0xbc, 0x42, 0x5b, 0x55, 0x68, 0xbf, 0x52, 0x1d, 0xbb,
	0x55, 0x3f, 0xcd, 0x8e, 0x0a, 0xf8, 0x11, 0x6a, 0x64, 0x5b, 0x86, 0x24, 0x06, 0x4f, 0x80, 0xaf,
	0xd7, 0xff, 0xba, 0xb5, 0x9e, 0xe9, 0xfb, 0xb9, 0xdc, 0xfa, 0x80, 0xfe, 0x55, 0xc5, 0x15, 0x95,
	0xe2, 0xc7, 0x68, 0x33, 0xab, 0x78, 0xa8, 0x3a, 0xd6, 0xb5, 0x62, 0xe4, 0x85, 0xe2, 0xfb, 0x3c,
	0x2e, 0xb7, 0xb8, 0x0d, 0x32, 0x87, 0x70, 0x07, 0xad, 0xfa, 0x9e, 0xf0, 0x64, 0xf5, 0xf5, 0x6e,
	0xd3, 0x56, 0xf7, 0x6b, 0xee, 0x0d, 0xb9, 0x52, 0x61, 0xbd, 0x45, 0xdb, 0xa7, 0xc0, 0xfc, 0x82,
	0x38, 0x66, 0x13, 0x08, 0x79, 0x04, 0xf8, 0x06, 0x42, 0x65, 0xbf, 0x89, 0xae, 0x99, 0x2b, 0x9d,
	0x86, 0x3b, 0xb7, 0x82, 0xef, 0xa3, 0x5a, 0x19, 0x0e, 0x49, 0x13, 0x7d, 0xc9, 0x44, 0x45, 0x2b,
	0x95, 0xd6, 0x73, 0x64, 0x9c, 0x80, 0x58, 0xe0, 0x4b, 0x4f, 0x07, 0x6d, 0x2b, 0xe5, 0x90, 0xfa,
	0xc0, 0x04, 0x3d, 0xa7, 0x10, 0xcb, 0xb3, 0x37, 0x5c, 0xac, 0xa8, 0x41, 0xc9, 0x58, 0xcf, 0xd0,
	0x96, 0x0b, 0x04, 0xe8, 0x04, 0x54, 0x7e, 0x19, 0xac, 0xc8, 0x91, 0xc7, 0xbe, 0x36, 0x98, 0x52,
	0x76, 0x7f, 0x57, 0x50, 0x6b, 0x81, 0x3d, 0x85, 0x78, 0x42, 0x09, 0xe0, 0xe0, 0x42, 0x41, 0x65,
	0xc3, 0xed, 0x72, 0xea, 0x25, 0xf5, 0x19, 0x57, 0x7a, 0x5a, 0xfa, 0xe7, 0x1f, 0xbf, 0xbe, 0x56,
	0xb0, 0xb5, 0xa9, 0xfe, 0xf3, 0x4e, 0x76, 0x59, 0x7b, 0xda, 0x2e, 0xfe, 0x84, 0xf0, 0x72, 0x39,
	0xf8, 0x56, 0x39, 0xe9, 0xea, 0xe6, 0xae, 0xb1, 0xdb, 0x95, 0x76, 0xb7, 0xb1, 0x55, 0xda, 0x05,
	0x20, 0x9c, 0xf7, 0x97, 0xf4, 0xfc, 0x11, 0x33, 0xb4, 0x73, 0x02, 0x62, 0xa1, 0x51, 0x35, 0x29,
	0xc1, 0xad, 0xa5, 0x0b, 0x7d, 0x9c, 0x7d, 0x4e, 0x8c, 0xff, 0x4b, 0xf3, 0xc5, 0x97, 0x61, 0xb5,
	0xa5, 0x7b, 0x0b, 0x37, 0xe7, 0xdd, 0x95, 0xea, 0xe9, 0x4f, 0xed, 0xcb, 0xe1, 0x37, 0x0d, 0x07,
	0x48, 0xef, 0x03, 0x13, 0x31, 0x3d, 0x4f, 0x03, 0x30, 0x5f, 0x9c, 0x9a, 0xfd, 0x30, 0xbb, 0x63,
	0xe6, 0xe1, 0xcb, 0x81, 0x75, 0x84, 0xd0, 0x8c, 0xc3, 0xe6, 0x48, 0x88, 0x28, 0xe9, 0x39, 0x4e,
	0x40, 0xc5, 0x28, 0x3d, 0xb3, 0x09, 0x1f, 0x3b, 0x33, 0x7a, 0xc0, 0x88, 0xd1, 0x1c, 0x41, 0x18,
	0xf2, 0x27, 0xa4, 0x5c, 0xb4, 0x39, 0x83, 0xee, 0xda, 0xbe, 0xbd, 0x6f, 0xdf, 0x35, 0xfe, 0x09,
	0x39, 0xf1, 0xc2, 0x11, 0x4f, 0x44, 0xef, 0x60, 0xff, 0xa0, 0xbb, 0xab, 0x55, 0xba, 0x5b, 0x5e,
	0x14, 0x85, 0x94, 0xc8, 0x4f, 0x9d, 0xf3, 0x26, 0xe1, 0xac, 0xb7, 0xb4, 0xf2, 0xfa, 0xe1, 0x55,
	0x6e, 0x4e, 0xc0, 0xf7, 0x66, 0x4e, 0xce, 0xdc, 0xcf, 0xe2, 0xb4, 0x67, 0xeb, 0xb2, 0xaa, 0x7b,
	0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x02, 0x92, 0xdf, 0x4c, 0xe8, 0x05, 0x00, 0x00,
}
