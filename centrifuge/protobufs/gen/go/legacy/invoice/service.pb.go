// Code generated by protoc-gen-go. DO NOT EDIT.
// source: legacy/invoice/service.proto

package invoicepb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import invoice "github.com/centrifuge/centrifuge-protobufs/gen/go/invoice"
import proto1 "github.com/centrifuge/precise-proofs/proofs/proto"
import empty "github.com/golang/protobuf/ptypes/empty"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateInvoiceProofEnvelope struct {
	DocumentIdentifier   []byte   `protobuf:"bytes,1,opt,name=document_identifier,json=documentIdentifier,proto3" json:"document_identifier,omitempty"`
	Fields               []string `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateInvoiceProofEnvelope) Reset()         { *m = CreateInvoiceProofEnvelope{} }
func (m *CreateInvoiceProofEnvelope) String() string { return proto.CompactTextString(m) }
func (*CreateInvoiceProofEnvelope) ProtoMessage()    {}
func (*CreateInvoiceProofEnvelope) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_5b42eefa68c7e989, []int{0}
}
func (m *CreateInvoiceProofEnvelope) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateInvoiceProofEnvelope.Unmarshal(m, b)
}
func (m *CreateInvoiceProofEnvelope) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateInvoiceProofEnvelope.Marshal(b, m, deterministic)
}
func (dst *CreateInvoiceProofEnvelope) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateInvoiceProofEnvelope.Merge(dst, src)
}
func (m *CreateInvoiceProofEnvelope) XXX_Size() int {
	return xxx_messageInfo_CreateInvoiceProofEnvelope.Size(m)
}
func (m *CreateInvoiceProofEnvelope) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateInvoiceProofEnvelope.DiscardUnknown(m)
}

var xxx_messageInfo_CreateInvoiceProofEnvelope proto.InternalMessageInfo

func (m *CreateInvoiceProofEnvelope) GetDocumentIdentifier() []byte {
	if m != nil {
		return m.DocumentIdentifier
	}
	return nil
}

func (m *CreateInvoiceProofEnvelope) GetFields() []string {
	if m != nil {
		return m.Fields
	}
	return nil
}

type InvoiceProof struct {
	DocumentIdentifier   []byte          `protobuf:"bytes,1,opt,name=document_identifier,json=documentIdentifier,proto3" json:"document_identifier,omitempty"`
	FieldProofs          []*proto1.Proof `protobuf:"bytes,2,rep,name=field_proofs,json=fieldProofs,proto3" json:"field_proofs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *InvoiceProof) Reset()         { *m = InvoiceProof{} }
func (m *InvoiceProof) String() string { return proto.CompactTextString(m) }
func (*InvoiceProof) ProtoMessage()    {}
func (*InvoiceProof) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_5b42eefa68c7e989, []int{1}
}
func (m *InvoiceProof) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvoiceProof.Unmarshal(m, b)
}
func (m *InvoiceProof) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvoiceProof.Marshal(b, m, deterministic)
}
func (dst *InvoiceProof) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvoiceProof.Merge(dst, src)
}
func (m *InvoiceProof) XXX_Size() int {
	return xxx_messageInfo_InvoiceProof.Size(m)
}
func (m *InvoiceProof) XXX_DiscardUnknown() {
	xxx_messageInfo_InvoiceProof.DiscardUnknown(m)
}

var xxx_messageInfo_InvoiceProof proto.InternalMessageInfo

func (m *InvoiceProof) GetDocumentIdentifier() []byte {
	if m != nil {
		return m.DocumentIdentifier
	}
	return nil
}

func (m *InvoiceProof) GetFieldProofs() []*proto1.Proof {
	if m != nil {
		return m.FieldProofs
	}
	return nil
}

type AnchorInvoiceEnvelope struct {
	Document             *invoice.InvoiceDocument `protobuf:"bytes,1,opt,name=document,proto3" json:"document,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *AnchorInvoiceEnvelope) Reset()         { *m = AnchorInvoiceEnvelope{} }
func (m *AnchorInvoiceEnvelope) String() string { return proto.CompactTextString(m) }
func (*AnchorInvoiceEnvelope) ProtoMessage()    {}
func (*AnchorInvoiceEnvelope) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_5b42eefa68c7e989, []int{2}
}
func (m *AnchorInvoiceEnvelope) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnchorInvoiceEnvelope.Unmarshal(m, b)
}
func (m *AnchorInvoiceEnvelope) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnchorInvoiceEnvelope.Marshal(b, m, deterministic)
}
func (dst *AnchorInvoiceEnvelope) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnchorInvoiceEnvelope.Merge(dst, src)
}
func (m *AnchorInvoiceEnvelope) XXX_Size() int {
	return xxx_messageInfo_AnchorInvoiceEnvelope.Size(m)
}
func (m *AnchorInvoiceEnvelope) XXX_DiscardUnknown() {
	xxx_messageInfo_AnchorInvoiceEnvelope.DiscardUnknown(m)
}

var xxx_messageInfo_AnchorInvoiceEnvelope proto.InternalMessageInfo

func (m *AnchorInvoiceEnvelope) GetDocument() *invoice.InvoiceDocument {
	if m != nil {
		return m.Document
	}
	return nil
}

type SendInvoiceEnvelope struct {
	// Centrifuge OS Entity of the recipient
	Recipients           [][]byte                 `protobuf:"bytes,1,rep,name=recipients,proto3" json:"recipients,omitempty"`
	Document             *invoice.InvoiceDocument `protobuf:"bytes,10,opt,name=document,proto3" json:"document,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *SendInvoiceEnvelope) Reset()         { *m = SendInvoiceEnvelope{} }
func (m *SendInvoiceEnvelope) String() string { return proto.CompactTextString(m) }
func (*SendInvoiceEnvelope) ProtoMessage()    {}
func (*SendInvoiceEnvelope) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_5b42eefa68c7e989, []int{3}
}
func (m *SendInvoiceEnvelope) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendInvoiceEnvelope.Unmarshal(m, b)
}
func (m *SendInvoiceEnvelope) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendInvoiceEnvelope.Marshal(b, m, deterministic)
}
func (dst *SendInvoiceEnvelope) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendInvoiceEnvelope.Merge(dst, src)
}
func (m *SendInvoiceEnvelope) XXX_Size() int {
	return xxx_messageInfo_SendInvoiceEnvelope.Size(m)
}
func (m *SendInvoiceEnvelope) XXX_DiscardUnknown() {
	xxx_messageInfo_SendInvoiceEnvelope.DiscardUnknown(m)
}

var xxx_messageInfo_SendInvoiceEnvelope proto.InternalMessageInfo

func (m *SendInvoiceEnvelope) GetRecipients() [][]byte {
	if m != nil {
		return m.Recipients
	}
	return nil
}

func (m *SendInvoiceEnvelope) GetDocument() *invoice.InvoiceDocument {
	if m != nil {
		return m.Document
	}
	return nil
}

type GetInvoiceDocumentEnvelope struct {
	DocumentIdentifier   []byte   `protobuf:"bytes,1,opt,name=document_identifier,json=documentIdentifier,proto3" json:"document_identifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInvoiceDocumentEnvelope) Reset()         { *m = GetInvoiceDocumentEnvelope{} }
func (m *GetInvoiceDocumentEnvelope) String() string { return proto.CompactTextString(m) }
func (*GetInvoiceDocumentEnvelope) ProtoMessage()    {}
func (*GetInvoiceDocumentEnvelope) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_5b42eefa68c7e989, []int{4}
}
func (m *GetInvoiceDocumentEnvelope) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInvoiceDocumentEnvelope.Unmarshal(m, b)
}
func (m *GetInvoiceDocumentEnvelope) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInvoiceDocumentEnvelope.Marshal(b, m, deterministic)
}
func (dst *GetInvoiceDocumentEnvelope) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInvoiceDocumentEnvelope.Merge(dst, src)
}
func (m *GetInvoiceDocumentEnvelope) XXX_Size() int {
	return xxx_messageInfo_GetInvoiceDocumentEnvelope.Size(m)
}
func (m *GetInvoiceDocumentEnvelope) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInvoiceDocumentEnvelope.DiscardUnknown(m)
}

var xxx_messageInfo_GetInvoiceDocumentEnvelope proto.InternalMessageInfo

func (m *GetInvoiceDocumentEnvelope) GetDocumentIdentifier() []byte {
	if m != nil {
		return m.DocumentIdentifier
	}
	return nil
}

type ReceivedInvoices struct {
	Invoices             []*invoice.InvoiceDocument `protobuf:"bytes,1,rep,name=invoices,proto3" json:"invoices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ReceivedInvoices) Reset()         { *m = ReceivedInvoices{} }
func (m *ReceivedInvoices) String() string { return proto.CompactTextString(m) }
func (*ReceivedInvoices) ProtoMessage()    {}
func (*ReceivedInvoices) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_5b42eefa68c7e989, []int{5}
}
func (m *ReceivedInvoices) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceivedInvoices.Unmarshal(m, b)
}
func (m *ReceivedInvoices) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceivedInvoices.Marshal(b, m, deterministic)
}
func (dst *ReceivedInvoices) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceivedInvoices.Merge(dst, src)
}
func (m *ReceivedInvoices) XXX_Size() int {
	return xxx_messageInfo_ReceivedInvoices.Size(m)
}
func (m *ReceivedInvoices) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceivedInvoices.DiscardUnknown(m)
}

var xxx_messageInfo_ReceivedInvoices proto.InternalMessageInfo

func (m *ReceivedInvoices) GetInvoices() []*invoice.InvoiceDocument {
	if m != nil {
		return m.Invoices
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateInvoiceProofEnvelope)(nil), "invoice.CreateInvoiceProofEnvelope")
	proto.RegisterType((*InvoiceProof)(nil), "invoice.InvoiceProof")
	proto.RegisterType((*AnchorInvoiceEnvelope)(nil), "invoice.AnchorInvoiceEnvelope")
	proto.RegisterType((*SendInvoiceEnvelope)(nil), "invoice.SendInvoiceEnvelope")
	proto.RegisterType((*GetInvoiceDocumentEnvelope)(nil), "invoice.GetInvoiceDocumentEnvelope")
	proto.RegisterType((*ReceivedInvoices)(nil), "invoice.ReceivedInvoices")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InvoiceDocumentServiceClient is the client API for InvoiceDocumentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InvoiceDocumentServiceClient interface {
	CreateInvoiceProof(ctx context.Context, in *CreateInvoiceProofEnvelope, opts ...grpc.CallOption) (*InvoiceProof, error)
	AnchorInvoiceDocument(ctx context.Context, in *AnchorInvoiceEnvelope, opts ...grpc.CallOption) (*invoice.InvoiceDocument, error)
	SendInvoiceDocument(ctx context.Context, in *SendInvoiceEnvelope, opts ...grpc.CallOption) (*invoice.InvoiceDocument, error)
	GetInvoiceDocument(ctx context.Context, in *GetInvoiceDocumentEnvelope, opts ...grpc.CallOption) (*invoice.InvoiceDocument, error)
	GetReceivedInvoiceDocuments(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ReceivedInvoices, error)
}

type invoiceDocumentServiceClient struct {
	cc *grpc.ClientConn
}

func NewInvoiceDocumentServiceClient(cc *grpc.ClientConn) InvoiceDocumentServiceClient {
	return &invoiceDocumentServiceClient{cc}
}

func (c *invoiceDocumentServiceClient) CreateInvoiceProof(ctx context.Context, in *CreateInvoiceProofEnvelope, opts ...grpc.CallOption) (*InvoiceProof, error) {
	out := new(InvoiceProof)
	err := c.cc.Invoke(ctx, "/invoice.InvoiceDocumentService/CreateInvoiceProof", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *invoiceDocumentServiceClient) AnchorInvoiceDocument(ctx context.Context, in *AnchorInvoiceEnvelope, opts ...grpc.CallOption) (*invoice.InvoiceDocument, error) {
	out := new(invoice.InvoiceDocument)
	err := c.cc.Invoke(ctx, "/invoice.InvoiceDocumentService/AnchorInvoiceDocument", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *invoiceDocumentServiceClient) SendInvoiceDocument(ctx context.Context, in *SendInvoiceEnvelope, opts ...grpc.CallOption) (*invoice.InvoiceDocument, error) {
	out := new(invoice.InvoiceDocument)
	err := c.cc.Invoke(ctx, "/invoice.InvoiceDocumentService/SendInvoiceDocument", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *invoiceDocumentServiceClient) GetInvoiceDocument(ctx context.Context, in *GetInvoiceDocumentEnvelope, opts ...grpc.CallOption) (*invoice.InvoiceDocument, error) {
	out := new(invoice.InvoiceDocument)
	err := c.cc.Invoke(ctx, "/invoice.InvoiceDocumentService/GetInvoiceDocument", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *invoiceDocumentServiceClient) GetReceivedInvoiceDocuments(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ReceivedInvoices, error) {
	out := new(ReceivedInvoices)
	err := c.cc.Invoke(ctx, "/invoice.InvoiceDocumentService/GetReceivedInvoiceDocuments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InvoiceDocumentServiceServer is the server API for InvoiceDocumentService service.
type InvoiceDocumentServiceServer interface {
	CreateInvoiceProof(context.Context, *CreateInvoiceProofEnvelope) (*InvoiceProof, error)
	AnchorInvoiceDocument(context.Context, *AnchorInvoiceEnvelope) (*invoice.InvoiceDocument, error)
	SendInvoiceDocument(context.Context, *SendInvoiceEnvelope) (*invoice.InvoiceDocument, error)
	GetInvoiceDocument(context.Context, *GetInvoiceDocumentEnvelope) (*invoice.InvoiceDocument, error)
	GetReceivedInvoiceDocuments(context.Context, *empty.Empty) (*ReceivedInvoices, error)
}

func RegisterInvoiceDocumentServiceServer(s *grpc.Server, srv InvoiceDocumentServiceServer) {
	s.RegisterService(&_InvoiceDocumentService_serviceDesc, srv)
}

func _InvoiceDocumentService_CreateInvoiceProof_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateInvoiceProofEnvelope)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InvoiceDocumentServiceServer).CreateInvoiceProof(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/invoice.InvoiceDocumentService/CreateInvoiceProof",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InvoiceDocumentServiceServer).CreateInvoiceProof(ctx, req.(*CreateInvoiceProofEnvelope))
	}
	return interceptor(ctx, in, info, handler)
}

func _InvoiceDocumentService_AnchorInvoiceDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AnchorInvoiceEnvelope)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InvoiceDocumentServiceServer).AnchorInvoiceDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/invoice.InvoiceDocumentService/AnchorInvoiceDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InvoiceDocumentServiceServer).AnchorInvoiceDocument(ctx, req.(*AnchorInvoiceEnvelope))
	}
	return interceptor(ctx, in, info, handler)
}

func _InvoiceDocumentService_SendInvoiceDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendInvoiceEnvelope)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InvoiceDocumentServiceServer).SendInvoiceDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/invoice.InvoiceDocumentService/SendInvoiceDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InvoiceDocumentServiceServer).SendInvoiceDocument(ctx, req.(*SendInvoiceEnvelope))
	}
	return interceptor(ctx, in, info, handler)
}

func _InvoiceDocumentService_GetInvoiceDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInvoiceDocumentEnvelope)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InvoiceDocumentServiceServer).GetInvoiceDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/invoice.InvoiceDocumentService/GetInvoiceDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InvoiceDocumentServiceServer).GetInvoiceDocument(ctx, req.(*GetInvoiceDocumentEnvelope))
	}
	return interceptor(ctx, in, info, handler)
}

func _InvoiceDocumentService_GetReceivedInvoiceDocuments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InvoiceDocumentServiceServer).GetReceivedInvoiceDocuments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/invoice.InvoiceDocumentService/GetReceivedInvoiceDocuments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InvoiceDocumentServiceServer).GetReceivedInvoiceDocuments(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _InvoiceDocumentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "invoice.InvoiceDocumentService",
	HandlerType: (*InvoiceDocumentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateInvoiceProof",
			Handler:    _InvoiceDocumentService_CreateInvoiceProof_Handler,
		},
		{
			MethodName: "AnchorInvoiceDocument",
			Handler:    _InvoiceDocumentService_AnchorInvoiceDocument_Handler,
		},
		{
			MethodName: "SendInvoiceDocument",
			Handler:    _InvoiceDocumentService_SendInvoiceDocument_Handler,
		},
		{
			MethodName: "GetInvoiceDocument",
			Handler:    _InvoiceDocumentService_GetInvoiceDocument_Handler,
		},
		{
			MethodName: "GetReceivedInvoiceDocuments",
			Handler:    _InvoiceDocumentService_GetReceivedInvoiceDocuments_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "legacy/invoice/service.proto",
}

func init() {
	proto.RegisterFile("legacy/invoice/service.proto", fileDescriptor_service_5b42eefa68c7e989)
}

var fileDescriptor_service_5b42eefa68c7e989 = []byte{
	// 628 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0xdf, 0x6e, 0xd3, 0x30,
	0x14, 0xc6, 0x95, 0x4d, 0x1a, 0xcc, 0x2d, 0x12, 0xf2, 0x58, 0xd5, 0xa5, 0x65, 0xb2, 0x32, 0xa1,
	0x55, 0x40, 0x93, 0x31, 0xb8, 0x01, 0x6e, 0xe8, 0x60, 0x1a, 0xbb, 0x98, 0x34, 0x65, 0x77, 0xdc,
	0x4c, 0x59, 0x72, 0x92, 0x59, 0xb4, 0x76, 0x88, 0xdd, 0xa2, 0x0a, 0x71, 0xb3, 0x47, 0xe8, 0x6e,
	0xb8, 0xe6, 0x61, 0x78, 0x01, 0x5e, 0x81, 0x07, 0x41, 0xb1, 0x9d, 0xac, 0x4b, 0xff, 0x68, 0x70,
	0x95, 0xd8, 0xe7, 0xf8, 0x7c, 0x3f, 0xdb, 0xdf, 0x31, 0x6a, 0xf7, 0x21, 0x09, 0xc2, 0xb1, 0x47,
	0xd9, 0x88, 0xd3, 0x10, 0x3c, 0x01, 0xd9, 0x88, 0x86, 0xe0, 0xa6, 0x19, 0x97, 0x1c, 0xdf, 0x33,
	0xd3, 0x76, 0x3b, 0xe1, 0x3c, 0xe9, 0x83, 0x17, 0xa4, 0xd4, 0x0b, 0x18, 0xe3, 0x32, 0x90, 0x94,
	0x33, 0xa1, 0xd3, 0xec, 0x96, 0x89, 0xaa, 0xd1, 0xc5, 0x30, 0xf6, 0x60, 0x90, 0xca, 0xb1, 0x09,
	0x6e, 0x16, 0xa5, 0xcd, 0xd7, 0x4c, 0xef, 0xa6, 0x19, 0x84, 0x54, 0x40, 0x37, 0xcd, 0x38, 0x8f,
	0x85, 0x77, 0xf3, 0x91, 0x5c, 0x0f, 0x4c, 0xe2, 0x73, 0xf5, 0x09, 0xbb, 0x09, 0xb0, 0xae, 0xf8,
	0x1a, 0x24, 0x09, 0x64, 0x1e, 0x4f, 0x95, 0xfc, 0x2c, 0x8a, 0x03, 0xc8, 0x7e, 0x9f, 0x41, 0x20,
	0xe1, 0x58, 0xab, 0x9d, 0xe6, 0x95, 0x0e, 0xd9, 0x08, 0xfa, 0x3c, 0x05, 0xec, 0xa1, 0x8d, 0x88,
	0x87, 0xc3, 0x01, 0x30, 0x79, 0x4e, 0x23, 0x60, 0x92, 0xc6, 0x14, 0xb2, 0xa6, 0x45, 0xac, 0x4e,
	0xdd, 0xc7, 0x45, 0xe8, 0xb8, 0x8c, 0xe0, 0x06, 0x5a, 0x8b, 0x29, 0xf4, 0x23, 0xd1, 0x5c, 0x21,
	0xab, 0x9d, 0x75, 0xdf, 0x8c, 0x9c, 0x2f, 0xa8, 0x3e, 0x2d, 0xf0, 0xef, 0x85, 0xf7, 0x50, 0x5d,
	0x95, 0x3a, 0xd7, 0xfb, 0x56, 0xe5, 0x6b, 0xfb, 0x0f, 0x5c, 0x3d, 0x74, 0x55, 0x55, 0xbf, 0xa6,
	0x52, 0xd4, 0xbf, 0x70, 0x4e, 0xd0, 0x66, 0x8f, 0x85, 0x97, 0x3c, 0x33, 0xc2, 0xe5, 0xa6, 0x5e,
	0xa1, 0xfb, 0x85, 0x80, 0x12, 0xac, 0xed, 0x37, 0xdd, 0xe2, 0xac, 0x4d, 0xee, 0x07, 0x13, 0xf7,
	0xcb, 0x4c, 0xe7, 0x33, 0xda, 0x38, 0x03, 0x16, 0x55, 0x8b, 0x6d, 0x23, 0x94, 0xdf, 0x4b, 0x4a,
	0x81, 0x49, 0xd1, 0xb4, 0xc8, 0x6a, 0xa7, 0xee, 0x4f, 0xcd, 0xdc, 0x12, 0x43, 0x77, 0x16, 0x3b,
	0x41, 0xf6, 0x11, 0xc8, 0x4a, 0xfc, 0xbf, 0x6f, 0xc5, 0xf9, 0x88, 0x1e, 0xfa, 0x10, 0x02, 0x1d,
	0x41, 0xc1, 0xaf, 0xc0, 0x0c, 0x87, 0xc6, 0x5e, 0x0a, 0x56, 0x64, 0xee, 0xff, 0x58, 0x43, 0x8d,
	0x4a, 0xf4, 0x4c, 0x77, 0x00, 0xfe, 0x65, 0x21, 0x3c, 0x6b, 0x25, 0xbc, 0x53, 0x56, 0x5d, 0xec,
	0x33, 0x7b, 0xb3, 0x2a, 0xad, 0xc2, 0x8e, 0x9c, 0xf4, 0xde, 0xda, 0xaf, 0xf5, 0x3a, 0x41, 0x02,
	0xd2, 0xa7, 0x42, 0x12, 0x1e, 0x13, 0xd3, 0x0a, 0x44, 0x5f, 0x3e, 0x89, 0x79, 0x46, 0xe4, 0x25,
	0x10, 0x91, 0x42, 0x98, 0x6f, 0x38, 0x22, 0xda, 0x75, 0x57, 0xbf, 0xff, 0x5c, 0xaf, 0xec, 0x39,
	0xcf, 0xbc, 0x4a, 0xcf, 0x7e, 0x9b, 0x73, 0x7a, 0xdf, 0x75, 0x0f, 0xbd, 0xb1, 0x9e, 0xe2, 0x6b,
	0xab, 0xe2, 0x9c, 0x62, 0xa7, 0x78, 0xbb, 0xc4, 0x9c, 0xeb, 0x2c, 0x7b, 0xe1, 0x09, 0x3a, 0xef,
	0x26, 0xbd, 0xb6, 0x6d, 0xeb, 0x55, 0x24, 0x60, 0xc4, 0xe4, 0x91, 0x82, 0x44, 0xa1, 0xb6, 0x9c,
	0x46, 0x15, 0x35, 0x50, 0x2b, 0x72, 0xaa, 0x9f, 0xd6, 0x2d, 0x03, 0x96, 0x4c, 0xed, 0x52, 0x73,
	0x8e, 0x3d, 0x97, 0x10, 0x9d, 0x4d, 0x7a, 0x2f, 0x6c, 0x2f, 0x5f, 0x33, 0x8f, 0x87, 0x48, 0x5e,
	0x39, 0xd2, 0x34, 0xc8, 0xe4, 0x58, 0x61, 0x6e, 0x39, 0x8f, 0xbc, 0x99, 0x57, 0x90, 0x45, 0x39,
	0xe4, 0x95, 0x85, 0xf0, 0xac, 0x71, 0xa7, 0x3c, 0xb0, 0xd8, 0xd5, 0x4b, 0x50, 0xbb, 0x4a, 0x76,
	0x17, 0x3f, 0xb9, 0xd3, 0x45, 0xe2, 0x21, 0x6a, 0x1d, 0x81, 0xac, 0x18, 0xbe, 0x28, 0x26, 0x70,
	0xc3, 0xd5, 0xaf, 0xaf, 0x5b, 0xbc, 0xbe, 0xee, 0x61, 0xfe, 0xfa, 0xda, 0x5b, 0xa5, 0x7e, 0xb5,
	0x57, 0x9c, 0x1d, 0x05, 0xf0, 0x18, 0xb7, 0xaa, 0x00, 0xc9, 0x8d, 0xce, 0x41, 0x07, 0xd5, 0x42,
	0x3e, 0x28, 0x8a, 0x1c, 0xd4, 0x4d, 0x5f, 0x9c, 0xe6, 0x2a, 0xa7, 0xd6, 0xa7, 0x75, 0x13, 0x48,
	0x2f, 0x2e, 0xd6, 0x94, 0xf2, 0xcb, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x53, 0x00, 0xc6, 0x65,
	0x4c, 0x06, 0x00, 0x00,
}
