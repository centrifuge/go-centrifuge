syntax = "proto3";

package invoice;

option go_package = "invoicepb";
option java_multiple_files = true;
option java_outer_classname = "ServiceProto";
option java_package = "com.invoice";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "invoice/invoice.proto";
import "precise-proofs/proofs/proto/proof.proto";
import "protoc-gen-swagger/options/annotations.proto";

// InvoiceDocumentService contains all common interactions for invoice documents
service InvoiceDocumentService {
  rpc CreateDocument(CreateDocumentRequest) returns (InvoiceDocument) {
    option (google.api.http) = {
      post: "/invoice/"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description: ""
    };

  }
  // TODO PUT  Method
  rpc UpdateDocument(UpdateDocument) returns (InvoiceDocument) {
  
  }
  
  rpc GetDocument() returns () {}
  


  // Use case specific endpoints
  rpc CreateDocumentProof () reutrns () {}

  // Should add/remove collaborators be explicit calls or just be part of the CRUD calls?
  // - AddCollaborator()
  // - RemoveCollaborator

  // NFT Minting
  // - TokenizeDocument
  //   Request:
  //   * Token Registry ID (either contract address or "WKID"
  //   * Optional, if not a well known registry: fields to prove
  //   * Optional, if the registry requires any extra data, a way to provide it
  // - CheckTokenOwnership
  // - RequestDocumentByToken (registry id, token id, owning centrifuge id)
  

}

