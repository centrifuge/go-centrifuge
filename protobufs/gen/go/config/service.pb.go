// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config/service.proto

package configpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import duration "github.com/golang/protobuf/ptypes/duration"
import empty "github.com/golang/protobuf/ptypes/empty"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetTenantRequest struct {
	Identifier           string   `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTenantRequest) Reset()         { *m = GetTenantRequest{} }
func (m *GetTenantRequest) String() string { return proto.CompactTextString(m) }
func (*GetTenantRequest) ProtoMessage()    {}
func (*GetTenantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_21a2bc638067bc54, []int{0}
}
func (m *GetTenantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTenantRequest.Unmarshal(m, b)
}
func (m *GetTenantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTenantRequest.Marshal(b, m, deterministic)
}
func (dst *GetTenantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTenantRequest.Merge(dst, src)
}
func (m *GetTenantRequest) XXX_Size() int {
	return xxx_messageInfo_GetTenantRequest.Size(m)
}
func (m *GetTenantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTenantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTenantRequest proto.InternalMessageInfo

func (m *GetTenantRequest) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

type GetAllTenantResponse struct {
	Data                 []*TenantData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetAllTenantResponse) Reset()         { *m = GetAllTenantResponse{} }
func (m *GetAllTenantResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllTenantResponse) ProtoMessage()    {}
func (*GetAllTenantResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_21a2bc638067bc54, []int{1}
}
func (m *GetAllTenantResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllTenantResponse.Unmarshal(m, b)
}
func (m *GetAllTenantResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllTenantResponse.Marshal(b, m, deterministic)
}
func (dst *GetAllTenantResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllTenantResponse.Merge(dst, src)
}
func (m *GetAllTenantResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllTenantResponse.Size(m)
}
func (m *GetAllTenantResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllTenantResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllTenantResponse proto.InternalMessageInfo

func (m *GetAllTenantResponse) GetData() []*TenantData {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateTenantRequest struct {
	Identifier           string      `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Data                 *TenantData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UpdateTenantRequest) Reset()         { *m = UpdateTenantRequest{} }
func (m *UpdateTenantRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTenantRequest) ProtoMessage()    {}
func (*UpdateTenantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_21a2bc638067bc54, []int{2}
}
func (m *UpdateTenantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTenantRequest.Unmarshal(m, b)
}
func (m *UpdateTenantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTenantRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateTenantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTenantRequest.Merge(dst, src)
}
func (m *UpdateTenantRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTenantRequest.Size(m)
}
func (m *UpdateTenantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTenantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTenantRequest proto.InternalMessageInfo

func (m *UpdateTenantRequest) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *UpdateTenantRequest) GetData() *TenantData {
	if m != nil {
		return m.Data
	}
	return nil
}

type EthereumAccount struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EthereumAccount) Reset()         { *m = EthereumAccount{} }
func (m *EthereumAccount) String() string { return proto.CompactTextString(m) }
func (*EthereumAccount) ProtoMessage()    {}
func (*EthereumAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_21a2bc638067bc54, []int{3}
}
func (m *EthereumAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EthereumAccount.Unmarshal(m, b)
}
func (m *EthereumAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EthereumAccount.Marshal(b, m, deterministic)
}
func (dst *EthereumAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EthereumAccount.Merge(dst, src)
}
func (m *EthereumAccount) XXX_Size() int {
	return xxx_messageInfo_EthereumAccount.Size(m)
}
func (m *EthereumAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_EthereumAccount.DiscardUnknown(m)
}

var xxx_messageInfo_EthereumAccount proto.InternalMessageInfo

func (m *EthereumAccount) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *EthereumAccount) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *EthereumAccount) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type KeyPair struct {
	Pub                  string   `protobuf:"bytes,1,opt,name=pub,proto3" json:"pub,omitempty"`
	Pvt                  string   `protobuf:"bytes,2,opt,name=pvt,proto3" json:"pvt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyPair) Reset()         { *m = KeyPair{} }
func (m *KeyPair) String() string { return proto.CompactTextString(m) }
func (*KeyPair) ProtoMessage()    {}
func (*KeyPair) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_21a2bc638067bc54, []int{4}
}
func (m *KeyPair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyPair.Unmarshal(m, b)
}
func (m *KeyPair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyPair.Marshal(b, m, deterministic)
}
func (dst *KeyPair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyPair.Merge(dst, src)
}
func (m *KeyPair) XXX_Size() int {
	return xxx_messageInfo_KeyPair.Size(m)
}
func (m *KeyPair) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyPair.DiscardUnknown(m)
}

var xxx_messageInfo_KeyPair proto.InternalMessageInfo

func (m *KeyPair) GetPub() string {
	if m != nil {
		return m.Pub
	}
	return ""
}

func (m *KeyPair) GetPvt() string {
	if m != nil {
		return m.Pvt
	}
	return ""
}

type TenantData struct {
	EthAccount                       *EthereumAccount `protobuf:"bytes,1,opt,name=eth_account,json=ethAccount,proto3" json:"eth_account,omitempty"`
	EthDefaultAccountName            string           `protobuf:"bytes,2,opt,name=eth_default_account_name,json=ethDefaultAccountName,proto3" json:"eth_default_account_name,omitempty"`
	ReceiveEventNotificationEndpoint string           `protobuf:"bytes,3,opt,name=receive_event_notification_endpoint,json=receiveEventNotificationEndpoint,proto3" json:"receive_event_notification_endpoint,omitempty"`
	IdentityId                       string           `protobuf:"bytes,4,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
	SigningKeyPair                   *KeyPair         `protobuf:"bytes,5,opt,name=signing_key_pair,json=signingKeyPair,proto3" json:"signing_key_pair,omitempty"`
	EthauthKeyPair                   *KeyPair         `protobuf:"bytes,6,opt,name=ethauth_key_pair,json=ethauthKeyPair,proto3" json:"ethauth_key_pair,omitempty"`
	XXX_NoUnkeyedLiteral             struct{}         `json:"-"`
	XXX_unrecognized                 []byte           `json:"-"`
	XXX_sizecache                    int32            `json:"-"`
}

func (m *TenantData) Reset()         { *m = TenantData{} }
func (m *TenantData) String() string { return proto.CompactTextString(m) }
func (*TenantData) ProtoMessage()    {}
func (*TenantData) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_21a2bc638067bc54, []int{5}
}
func (m *TenantData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TenantData.Unmarshal(m, b)
}
func (m *TenantData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TenantData.Marshal(b, m, deterministic)
}
func (dst *TenantData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TenantData.Merge(dst, src)
}
func (m *TenantData) XXX_Size() int {
	return xxx_messageInfo_TenantData.Size(m)
}
func (m *TenantData) XXX_DiscardUnknown() {
	xxx_messageInfo_TenantData.DiscardUnknown(m)
}

var xxx_messageInfo_TenantData proto.InternalMessageInfo

func (m *TenantData) GetEthAccount() *EthereumAccount {
	if m != nil {
		return m.EthAccount
	}
	return nil
}

func (m *TenantData) GetEthDefaultAccountName() string {
	if m != nil {
		return m.EthDefaultAccountName
	}
	return ""
}

func (m *TenantData) GetReceiveEventNotificationEndpoint() string {
	if m != nil {
		return m.ReceiveEventNotificationEndpoint
	}
	return ""
}

func (m *TenantData) GetIdentityId() string {
	if m != nil {
		return m.IdentityId
	}
	return ""
}

func (m *TenantData) GetSigningKeyPair() *KeyPair {
	if m != nil {
		return m.SigningKeyPair
	}
	return nil
}

func (m *TenantData) GetEthauthKeyPair() *KeyPair {
	if m != nil {
		return m.EthauthKeyPair
	}
	return nil
}

type ConfigData struct {
	StoragePath               string             `protobuf:"bytes,1,opt,name=storage_path,json=storagePath,proto3" json:"storage_path,omitempty"`
	P2PPort                   int32              `protobuf:"varint,2,opt,name=p2p_port,json=p2pPort,proto3" json:"p2p_port,omitempty"`
	P2PExternalIp             string             `protobuf:"bytes,3,opt,name=p2p_external_ip,json=p2pExternalIp,proto3" json:"p2p_external_ip,omitempty"`
	P2PConnectionTimeout      *duration.Duration `protobuf:"bytes,4,opt,name=p2p_connection_timeout,json=p2pConnectionTimeout,proto3" json:"p2p_connection_timeout,omitempty"`
	ServerPort                int32              `protobuf:"varint,5,opt,name=server_port,json=serverPort,proto3" json:"server_port,omitempty"`
	ServerAddress             string             `protobuf:"bytes,6,opt,name=server_address,json=serverAddress,proto3" json:"server_address,omitempty"`
	NumWorkers                int32              `protobuf:"varint,7,opt,name=num_workers,json=numWorkers,proto3" json:"num_workers,omitempty"`
	WorkerWaitTimeMs          int32              `protobuf:"varint,8,opt,name=worker_wait_time_ms,json=workerWaitTimeMs,proto3" json:"worker_wait_time_ms,omitempty"`
	EthNodeUrl                string             `protobuf:"bytes,9,opt,name=eth_node_url,json=ethNodeUrl,proto3" json:"eth_node_url,omitempty"`
	EthContextReadWaitTimeout *duration.Duration `protobuf:"bytes,10,opt,name=eth_context_read_wait_timeout,json=ethContextReadWaitTimeout,proto3" json:"eth_context_read_wait_timeout,omitempty"`
	EthContextWaitTimeout     *duration.Duration `protobuf:"bytes,11,opt,name=eth_context_wait_timeout,json=ethContextWaitTimeout,proto3" json:"eth_context_wait_timeout,omitempty"`
	EthIntervalRetry          *duration.Duration `protobuf:"bytes,12,opt,name=eth_interval_retry,json=ethIntervalRetry,proto3" json:"eth_interval_retry,omitempty"`
	EthMaxRetries             uint32             `protobuf:"varint,13,opt,name=eth_max_retries,json=ethMaxRetries,proto3" json:"eth_max_retries,omitempty"`
	EthGasPrice               uint64             `protobuf:"varint,14,opt,name=eth_gas_price,json=ethGasPrice,proto3" json:"eth_gas_price,omitempty"`
	EthGasLimit               uint64             `protobuf:"varint,15,opt,name=eth_gas_limit,json=ethGasLimit,proto3" json:"eth_gas_limit,omitempty"`
	TxPoolEnabled             bool               `protobuf:"varint,16,opt,name=tx_pool_enabled,json=txPoolEnabled,proto3" json:"tx_pool_enabled,omitempty"`
	Network                   string             `protobuf:"bytes,17,opt,name=network,proto3" json:"network,omitempty"`
	BootstrapPeers            []string           `protobuf:"bytes,18,rep,name=bootstrap_peers,json=bootstrapPeers,proto3" json:"bootstrap_peers,omitempty"`
	NetworkId                 uint32             `protobuf:"varint,19,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	MainIdentity              *TenantData        `protobuf:"bytes,20,opt,name=main_identity,json=mainIdentity,proto3" json:"main_identity,omitempty"`
	SmartContractAddresses    map[string]string  `protobuf:"bytes,21,rep,name=smart_contract_addresses,json=smartContractAddresses,proto3" json:"smart_contract_addresses,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PprofEnabled              bool               `protobuf:"varint,22,opt,name=pprof_enabled,json=pprofEnabled,proto3" json:"pprof_enabled,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}           `json:"-"`
	XXX_unrecognized          []byte             `json:"-"`
	XXX_sizecache             int32              `json:"-"`
}

func (m *ConfigData) Reset()         { *m = ConfigData{} }
func (m *ConfigData) String() string { return proto.CompactTextString(m) }
func (*ConfigData) ProtoMessage()    {}
func (*ConfigData) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_21a2bc638067bc54, []int{6}
}
func (m *ConfigData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigData.Unmarshal(m, b)
}
func (m *ConfigData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigData.Marshal(b, m, deterministic)
}
func (dst *ConfigData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigData.Merge(dst, src)
}
func (m *ConfigData) XXX_Size() int {
	return xxx_messageInfo_ConfigData.Size(m)
}
func (m *ConfigData) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigData.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigData proto.InternalMessageInfo

func (m *ConfigData) GetStoragePath() string {
	if m != nil {
		return m.StoragePath
	}
	return ""
}

func (m *ConfigData) GetP2PPort() int32 {
	if m != nil {
		return m.P2PPort
	}
	return 0
}

func (m *ConfigData) GetP2PExternalIp() string {
	if m != nil {
		return m.P2PExternalIp
	}
	return ""
}

func (m *ConfigData) GetP2PConnectionTimeout() *duration.Duration {
	if m != nil {
		return m.P2PConnectionTimeout
	}
	return nil
}

func (m *ConfigData) GetServerPort() int32 {
	if m != nil {
		return m.ServerPort
	}
	return 0
}

func (m *ConfigData) GetServerAddress() string {
	if m != nil {
		return m.ServerAddress
	}
	return ""
}

func (m *ConfigData) GetNumWorkers() int32 {
	if m != nil {
		return m.NumWorkers
	}
	return 0
}

func (m *ConfigData) GetWorkerWaitTimeMs() int32 {
	if m != nil {
		return m.WorkerWaitTimeMs
	}
	return 0
}

func (m *ConfigData) GetEthNodeUrl() string {
	if m != nil {
		return m.EthNodeUrl
	}
	return ""
}

func (m *ConfigData) GetEthContextReadWaitTimeout() *duration.Duration {
	if m != nil {
		return m.EthContextReadWaitTimeout
	}
	return nil
}

func (m *ConfigData) GetEthContextWaitTimeout() *duration.Duration {
	if m != nil {
		return m.EthContextWaitTimeout
	}
	return nil
}

func (m *ConfigData) GetEthIntervalRetry() *duration.Duration {
	if m != nil {
		return m.EthIntervalRetry
	}
	return nil
}

func (m *ConfigData) GetEthMaxRetries() uint32 {
	if m != nil {
		return m.EthMaxRetries
	}
	return 0
}

func (m *ConfigData) GetEthGasPrice() uint64 {
	if m != nil {
		return m.EthGasPrice
	}
	return 0
}

func (m *ConfigData) GetEthGasLimit() uint64 {
	if m != nil {
		return m.EthGasLimit
	}
	return 0
}

func (m *ConfigData) GetTxPoolEnabled() bool {
	if m != nil {
		return m.TxPoolEnabled
	}
	return false
}

func (m *ConfigData) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *ConfigData) GetBootstrapPeers() []string {
	if m != nil {
		return m.BootstrapPeers
	}
	return nil
}

func (m *ConfigData) GetNetworkId() uint32 {
	if m != nil {
		return m.NetworkId
	}
	return 0
}

func (m *ConfigData) GetMainIdentity() *TenantData {
	if m != nil {
		return m.MainIdentity
	}
	return nil
}

func (m *ConfigData) GetSmartContractAddresses() map[string]string {
	if m != nil {
		return m.SmartContractAddresses
	}
	return nil
}

func (m *ConfigData) GetPprofEnabled() bool {
	if m != nil {
		return m.PprofEnabled
	}
	return false
}

func init() {
	proto.RegisterType((*GetTenantRequest)(nil), "config.GetTenantRequest")
	proto.RegisterType((*GetAllTenantResponse)(nil), "config.GetAllTenantResponse")
	proto.RegisterType((*UpdateTenantRequest)(nil), "config.UpdateTenantRequest")
	proto.RegisterType((*EthereumAccount)(nil), "config.EthereumAccount")
	proto.RegisterType((*KeyPair)(nil), "config.KeyPair")
	proto.RegisterType((*TenantData)(nil), "config.TenantData")
	proto.RegisterType((*ConfigData)(nil), "config.ConfigData")
	proto.RegisterMapType((map[string]string)(nil), "config.ConfigData.SmartContractAddressesEntry")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConfigServiceClient is the client API for ConfigService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConfigServiceClient interface {
	GetConfig(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ConfigData, error)
	GetTenant(ctx context.Context, in *GetTenantRequest, opts ...grpc.CallOption) (*TenantData, error)
	GetAllTenants(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetAllTenantResponse, error)
	CreateTenant(ctx context.Context, in *TenantData, opts ...grpc.CallOption) (*TenantData, error)
	GenerateTenant(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*TenantData, error)
	UpdateTenant(ctx context.Context, in *UpdateTenantRequest, opts ...grpc.CallOption) (*TenantData, error)
	DeleteTenant(ctx context.Context, in *GetTenantRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type configServiceClient struct {
	cc *grpc.ClientConn
}

func NewConfigServiceClient(cc *grpc.ClientConn) ConfigServiceClient {
	return &configServiceClient{cc}
}

func (c *configServiceClient) GetConfig(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ConfigData, error) {
	out := new(ConfigData)
	err := c.cc.Invoke(ctx, "/config.ConfigService/GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configServiceClient) GetTenant(ctx context.Context, in *GetTenantRequest, opts ...grpc.CallOption) (*TenantData, error) {
	out := new(TenantData)
	err := c.cc.Invoke(ctx, "/config.ConfigService/GetTenant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configServiceClient) GetAllTenants(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetAllTenantResponse, error) {
	out := new(GetAllTenantResponse)
	err := c.cc.Invoke(ctx, "/config.ConfigService/GetAllTenants", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configServiceClient) CreateTenant(ctx context.Context, in *TenantData, opts ...grpc.CallOption) (*TenantData, error) {
	out := new(TenantData)
	err := c.cc.Invoke(ctx, "/config.ConfigService/CreateTenant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configServiceClient) GenerateTenant(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*TenantData, error) {
	out := new(TenantData)
	err := c.cc.Invoke(ctx, "/config.ConfigService/GenerateTenant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configServiceClient) UpdateTenant(ctx context.Context, in *UpdateTenantRequest, opts ...grpc.CallOption) (*TenantData, error) {
	out := new(TenantData)
	err := c.cc.Invoke(ctx, "/config.ConfigService/UpdateTenant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configServiceClient) DeleteTenant(ctx context.Context, in *GetTenantRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/config.ConfigService/DeleteTenant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConfigServiceServer is the server API for ConfigService service.
type ConfigServiceServer interface {
	GetConfig(context.Context, *empty.Empty) (*ConfigData, error)
	GetTenant(context.Context, *GetTenantRequest) (*TenantData, error)
	GetAllTenants(context.Context, *empty.Empty) (*GetAllTenantResponse, error)
	CreateTenant(context.Context, *TenantData) (*TenantData, error)
	GenerateTenant(context.Context, *empty.Empty) (*TenantData, error)
	UpdateTenant(context.Context, *UpdateTenantRequest) (*TenantData, error)
	DeleteTenant(context.Context, *GetTenantRequest) (*empty.Empty, error)
}

func RegisterConfigServiceServer(s *grpc.Server, srv ConfigServiceServer) {
	s.RegisterService(&_ConfigService_serviceDesc, srv)
}

func _ConfigService_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServiceServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.ConfigService/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServiceServer).GetConfig(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigService_GetTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServiceServer).GetTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.ConfigService/GetTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServiceServer).GetTenant(ctx, req.(*GetTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigService_GetAllTenants_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServiceServer).GetAllTenants(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.ConfigService/GetAllTenants",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServiceServer).GetAllTenants(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigService_CreateTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TenantData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServiceServer).CreateTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.ConfigService/CreateTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServiceServer).CreateTenant(ctx, req.(*TenantData))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigService_GenerateTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServiceServer).GenerateTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.ConfigService/GenerateTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServiceServer).GenerateTenant(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigService_UpdateTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServiceServer).UpdateTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.ConfigService/UpdateTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServiceServer).UpdateTenant(ctx, req.(*UpdateTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigService_DeleteTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServiceServer).DeleteTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.ConfigService/DeleteTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServiceServer).DeleteTenant(ctx, req.(*GetTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ConfigService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "config.ConfigService",
	HandlerType: (*ConfigServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetConfig",
			Handler:    _ConfigService_GetConfig_Handler,
		},
		{
			MethodName: "GetTenant",
			Handler:    _ConfigService_GetTenant_Handler,
		},
		{
			MethodName: "GetAllTenants",
			Handler:    _ConfigService_GetAllTenants_Handler,
		},
		{
			MethodName: "CreateTenant",
			Handler:    _ConfigService_CreateTenant_Handler,
		},
		{
			MethodName: "GenerateTenant",
			Handler:    _ConfigService_GenerateTenant_Handler,
		},
		{
			MethodName: "UpdateTenant",
			Handler:    _ConfigService_UpdateTenant_Handler,
		},
		{
			MethodName: "DeleteTenant",
			Handler:    _ConfigService_DeleteTenant_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "config/service.proto",
}

func init() { proto.RegisterFile("config/service.proto", fileDescriptor_service_21a2bc638067bc54) }

var fileDescriptor_service_21a2bc638067bc54 = []byte{
	// 1317 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0xdb, 0x6e, 0x1b, 0x37,
	0x13, 0xc6, 0xda, 0xf1, 0x89, 0x92, 0x7c, 0xa0, 0x0f, 0xd9, 0x6c, 0x1c, 0x67, 0xa3, 0xe0, 0xcf,
	0x6f, 0x04, 0xbf, 0x65, 0x40, 0xff, 0x45, 0x0e, 0x17, 0x01, 0x14, 0x5b, 0x10, 0x8c, 0x36, 0xa9,
	0xb0, 0x49, 0x10, 0xb4, 0x45, 0xb1, 0xa0, 0xb5, 0x63, 0x69, 0xeb, 0x15, 0xc9, 0x90, 0x5c, 0xdb,
	0x42, 0x51, 0xa0, 0x08, 0x7a, 0xd5, 0x4b, 0xf7, 0x25, 0xfa, 0x3e, 0x7d, 0x85, 0xf6, 0x3d, 0x0a,
	0x1e, 0x56, 0x52, 0x64, 0xd9, 0x46, 0xaf, 0xa4, 0xfd, 0x66, 0xe6, 0x9b, 0x8f, 0xc3, 0x19, 0x92,
	0x68, 0xa3, 0xc3, 0xe8, 0x49, 0xda, 0xdd, 0x97, 0x20, 0xce, 0xd2, 0x0e, 0xd4, 0xb8, 0x60, 0x8a,
	0xe1, 0x79, 0x8b, 0x06, 0xdb, 0x5d, 0xc6, 0xba, 0x19, 0xec, 0x13, 0x9e, 0xee, 0x13, 0x4a, 0x99,
	0x22, 0x2a, 0x65, 0x54, 0x5a, 0xaf, 0x60, 0xc7, 0x59, 0xcd, 0xd7, 0x71, 0x7e, 0xb2, 0x9f, 0xe4,
	0xc2, 0x38, 0x38, 0xfb, 0xfd, 0x49, 0x3b, 0xf4, 0xb9, 0x1a, 0x38, 0xe3, 0xff, 0xcc, 0x4f, 0x67,
	0xaf, 0x0b, 0x74, 0x4f, 0x9e, 0x93, 0x6e, 0x17, 0xc4, 0x3e, 0xe3, 0x86, 0xfe, 0x6a, 0xaa, 0x6a,
	0x1d, 0xad, 0xb6, 0x40, 0xbd, 0x07, 0x4a, 0xa8, 0x8a, 0xe0, 0x53, 0x0e, 0x52, 0xe1, 0x1d, 0x84,
	0xd2, 0x04, 0xa8, 0x4a, 0x4f, 0x52, 0x10, 0xbe, 0x17, 0x7a, 0xbb, 0x4b, 0xd1, 0x18, 0x52, 0x7d,
	0x85, 0x36, 0x5a, 0xa0, 0x1a, 0x59, 0x56, 0x84, 0x49, 0xce, 0xa8, 0x04, 0xfc, 0x04, 0xdd, 0x49,
	0x88, 0x22, 0xbe, 0x17, 0xce, 0xee, 0x96, 0xea, 0xb8, 0x66, 0xd7, 0x5a, 0xb3, 0x5e, 0x87, 0x44,
	0x91, 0xc8, 0xd8, 0xab, 0x3f, 0xa0, 0xf5, 0x0f, 0x3c, 0x21, 0x0a, 0xfe, 0x55, 0xda, 0x21, 0xfd,
	0x4c, 0xe8, 0xdd, 0x48, 0xff, 0x2d, 0x5a, 0x69, 0xaa, 0x1e, 0x08, 0xc8, 0xfb, 0x8d, 0x4e, 0x87,
	0xe5, 0x54, 0x61, 0x1f, 0x2d, 0x90, 0x24, 0x11, 0x20, 0xa5, 0xe3, 0x2d, 0x3e, 0xf1, 0x2a, 0x9a,
	0x3d, 0x85, 0x81, 0xe1, 0x5c, 0x8a, 0xf4, 0x5f, 0x1c, 0xa0, 0x45, 0x4e, 0xa4, 0x3c, 0x67, 0x22,
	0xf1, 0x67, 0x0d, 0x3c, 0xfc, 0xae, 0xee, 0xa1, 0x85, 0xaf, 0x60, 0xd0, 0x26, 0xa9, 0xd0, 0x81,
	0x3c, 0x3f, 0x76, 0x74, 0xfa, 0xaf, 0x41, 0xce, 0x54, 0x41, 0xc5, 0xcf, 0x54, 0xf5, 0xef, 0x19,
	0x84, 0x46, 0xf2, 0xf0, 0x73, 0x54, 0x02, 0xd5, 0x8b, 0x89, 0x15, 0x65, 0x42, 0x4b, 0xf5, 0xbb,
	0xc5, 0x3a, 0x26, 0x34, 0x47, 0x08, 0x54, 0xaf, 0xd0, 0xff, 0x0c, 0xf9, 0x3a, 0x32, 0x81, 0x13,
	0x92, 0x67, 0xaa, 0x60, 0x88, 0x29, 0xe9, 0x83, 0xcb, 0xb7, 0x09, 0xaa, 0x77, 0x68, 0xcd, 0x2e,
	0xe8, 0x2d, 0xe9, 0x03, 0x7e, 0x83, 0x1e, 0x0b, 0xe8, 0x40, 0x7a, 0x06, 0x31, 0x9c, 0x81, 0x0e,
	0x61, 0xba, 0x9a, 0x1d, 0xd3, 0x03, 0x31, 0xd0, 0x84, 0xb3, 0x94, 0x2a, 0xb7, 0xce, 0xd0, 0xb9,
	0x36, 0xb5, 0xe7, 0xdb, 0x31, 0xc7, 0xa6, 0xf3, 0xc3, 0x0f, 0x51, 0xc9, 0x6e, 0x88, 0x1a, 0xc4,
	0x69, 0xe2, 0xdf, 0x19, 0xdf, 0x23, 0x35, 0x38, 0x4a, 0xf0, 0x0b, 0xb4, 0x2a, 0xd3, 0x2e, 0x4d,
	0x69, 0x37, 0x3e, 0x85, 0x41, 0xcc, 0x49, 0x2a, 0xfc, 0x39, 0xb3, 0xce, 0x95, 0x62, 0x9d, 0xae,
	0x80, 0xd1, 0xb2, 0x73, 0x2c, 0x0a, 0xfa, 0x02, 0xad, 0x82, 0xea, 0x91, 0x5c, 0xf5, 0x46, 0xa1,
	0xf3, 0xd7, 0x84, 0x3a, 0x47, 0xf7, 0x5d, 0xfd, 0x75, 0x09, 0xa1, 0x03, 0xe3, 0x62, 0xea, 0xfc,
	0x08, 0x95, 0xa5, 0x62, 0x82, 0x74, 0x21, 0xe6, 0x44, 0xf5, 0xdc, 0x1e, 0x95, 0x1c, 0xd6, 0x26,
	0xaa, 0x87, 0xef, 0xa1, 0x45, 0x5e, 0xe7, 0x31, 0x67, 0xc2, 0x6e, 0xd8, 0x5c, 0xb4, 0xc0, 0xeb,
	0xbc, 0xcd, 0x84, 0xc2, 0x4f, 0xd0, 0x8a, 0x36, 0xc1, 0x85, 0x02, 0x41, 0x49, 0x16, 0xa7, 0xdc,
	0x95, 0xa7, 0xc2, 0xeb, 0xbc, 0xe9, 0xd0, 0x23, 0x8e, 0xbf, 0x41, 0x5b, 0xda, 0xaf, 0xc3, 0x28,
	0x85, 0x8e, 0x29, 0xa7, 0x4a, 0xfb, 0xc0, 0x72, 0x65, 0xca, 0x52, 0xaa, 0xdf, 0xab, 0xd9, 0x29,
	0xad, 0x15, 0x53, 0x5a, 0x3b, 0x74, 0x53, 0x1c, 0x6d, 0xf0, 0x3a, 0x3f, 0x18, 0xc6, 0xbd, 0xb7,
	0x61, 0xba, 0xb8, 0xfa, 0xb0, 0x00, 0x61, 0x65, 0xcd, 0x19, 0x59, 0xc8, 0x42, 0x46, 0xd9, 0x7f,
	0xd0, 0xb2, 0x73, 0x28, 0x9a, 0x79, 0xde, 0x0a, 0xb3, 0x68, 0xc3, 0xb5, 0xf4, 0x43, 0x54, 0xa2,
	0x79, 0x3f, 0x3e, 0x67, 0xe2, 0x14, 0x84, 0xf4, 0x17, 0x2c, 0x0f, 0xcd, 0xfb, 0x1f, 0x2d, 0x82,
	0xf7, 0xd0, 0xba, 0x35, 0xc6, 0xe7, 0x24, 0x55, 0x46, 0x76, 0xdc, 0x97, 0xfe, 0xa2, 0x71, 0x5c,
	0xb5, 0xa6, 0x8f, 0x24, 0x55, 0x5a, 0xd8, 0x1b, 0x89, 0x43, 0x54, 0xd6, 0xcd, 0x47, 0x59, 0x02,
	0x71, 0x2e, 0x32, 0x7f, 0xc9, 0xee, 0x3a, 0xa8, 0xde, 0x5b, 0x96, 0xc0, 0x07, 0x91, 0xe1, 0xef,
	0xd1, 0x03, 0xed, 0xd1, 0x61, 0x54, 0xc1, 0x85, 0x8a, 0x05, 0x90, 0x64, 0x44, 0xad, 0x2b, 0x82,
	0x6e, 0xab, 0xc8, 0x3d, 0x50, 0xbd, 0x03, 0x1b, 0x1e, 0x01, 0x49, 0x8a, 0xec, 0xba, 0x2c, 0x91,
	0xed, 0xfd, 0x82, 0xfc, 0x0b, 0xde, 0xd2, 0x6d, 0xbc, 0x9b, 0x23, 0xde, 0x71, 0xce, 0x16, 0xc2,
	0x9a, 0x33, 0xa5, 0x0a, 0xc4, 0x19, 0xc9, 0x62, 0x01, 0x4a, 0x0c, 0xfc, 0xf2, 0x6d, 0x6c, 0xba,
	0x41, 0x8f, 0x5c, 0x4c, 0xa4, 0x43, 0x74, 0xb3, 0x68, 0xa2, 0x3e, 0xb9, 0x30, 0x1c, 0x29, 0x48,
	0xbf, 0x12, 0x7a, 0xbb, 0x95, 0xa8, 0x02, 0xaa, 0xf7, 0x86, 0x5c, 0x44, 0x16, 0xc4, 0x55, 0xa4,
	0x81, 0xb8, 0x4b, 0x64, 0xcc, 0x45, 0xda, 0x01, 0x7f, 0x39, 0xf4, 0x76, 0xef, 0x44, 0xfa, 0x3c,
	0x68, 0x11, 0xd9, 0xd6, 0xd0, 0xb8, 0x4f, 0x96, 0xf6, 0x53, 0xe5, 0xaf, 0x8c, 0xfb, 0x7c, 0xad,
	0x21, 0x9d, 0x4f, 0x5d, 0xc4, 0x9c, 0xb1, 0x2c, 0x06, 0x4a, 0x8e, 0x33, 0x48, 0xfc, 0xd5, 0xd0,
	0xdb, 0x5d, 0x8c, 0x2a, 0xea, 0xa2, 0xcd, 0x58, 0xd6, 0xb4, 0xa0, 0x3e, 0xf0, 0x28, 0x28, 0xbd,
	0x95, 0xfe, 0x9a, 0x3d, 0xf0, 0xdc, 0x27, 0xfe, 0x2f, 0x5a, 0x39, 0x66, 0x4c, 0x49, 0x25, 0x08,
	0x8f, 0x39, 0xe8, 0x0e, 0xc1, 0xe1, 0xec, 0xee, 0x52, 0xb4, 0x3c, 0x84, 0xdb, 0x1a, 0xc5, 0x0f,
	0x10, 0x72, 0x31, 0x7a, 0xd4, 0xd7, 0xcd, 0xaa, 0x96, 0x1c, 0x72, 0x94, 0xe0, 0x67, 0xa8, 0xd2,
	0x27, 0x29, 0x8d, 0x8b, 0xe1, 0xf7, 0x37, 0xae, 0x3d, 0x96, 0xcb, 0xda, 0xf1, 0xc8, 0xf9, 0xe1,
	0x1e, 0xf2, 0x65, 0x9f, 0x08, 0x65, 0x76, 0x54, 0x90, 0x8e, 0x2a, 0xba, 0x19, 0xa4, 0xbf, 0x69,
	0x6e, 0x8e, 0x5a, 0xc1, 0x31, 0x9a, 0xe9, 0xda, 0x3b, 0x1d, 0x72, 0xe0, 0x22, 0x1a, 0x45, 0x40,
	0x93, 0x2a, 0x31, 0x88, 0xb6, 0xe4, 0x54, 0x23, 0x7e, 0x8c, 0x2a, 0x9c, 0x0b, 0x76, 0x32, 0x2c,
	0xd5, 0x96, 0x29, 0x55, 0xd9, 0x80, 0xae, 0x52, 0xc1, 0x11, 0xba, 0x7f, 0x03, 0x77, 0x71, 0x3f,
	0x78, 0xa3, 0xfb, 0x61, 0x03, 0xcd, 0x9d, 0x91, 0x2c, 0x2f, 0x0e, 0x5e, 0xfb, 0xf1, 0x72, 0xe6,
	0xb9, 0x57, 0xff, 0x6d, 0x01, 0x55, 0xac, 0xe4, 0x77, 0xf6, 0xd2, 0xc7, 0x04, 0x2d, 0xb5, 0x40,
	0x59, 0x0c, 0x6f, 0x5d, 0x69, 0xac, 0xa6, 0xbe, 0xb6, 0x03, 0x7c, 0x75, 0xb9, 0xd5, 0xdd, 0xcb,
	0xc6, 0x5a, 0xb0, 0xd2, 0x02, 0x15, 0xea, 0x19, 0x0b, 0xad, 0xe5, 0xf3, 0x9f, 0x7f, 0xfd, 0x3e,
	0xb3, 0x8c, 0xcb, 0xfb, 0xee, 0x69, 0xa1, 0x27, 0x12, 0xe7, 0x26, 0x85, 0xad, 0x36, 0xf6, 0x0b,
	0xaa, 0xc9, 0x3b, 0x3d, 0x98, 0xb2, 0x2f, 0xd5, 0x97, 0x97, 0x8d, 0xf5, 0x60, 0x4d, 0x27, 0xb1,
	0xe0, 0x78, 0x9a, 0x1d, 0xbc, 0x5d, 0xa4, 0x51, 0xc6, 0x28, 0xf7, 0x7f, 0x1a, 0xdd, 0xc5, 0x3f,
	0xe3, 0x01, 0xaa, 0x8c, 0xbf, 0x01, 0xe4, 0xb5, 0xab, 0xdb, 0x1e, 0x93, 0x74, 0xe5, 0xc9, 0x50,
	0xad, 0x5f, 0x36, 0xfc, 0x60, 0x4b, 0x4b, 0x68, 0x64, 0xd9, 0x97, 0x32, 0xa4, 0xd1, 0xb1, 0x86,
	0x57, 0x26, 0x74, 0xe0, 0x4f, 0xa8, 0x7c, 0x20, 0x60, 0xf8, 0x7c, 0xc0, 0x53, 0x96, 0x36, 0x75,
	0xb9, 0x2f, 0x2e, 0x1b, 0xdb, 0x41, 0x60, 0x43, 0x65, 0x68, 0xd9, 0x42, 0xeb, 0x16, 0xea, 0x87,
	0x83, 0xc9, 0xb7, 0x51, 0x9d, 0xcc, 0xf7, 0xd2, 0x7b, 0x8a, 0xff, 0xf0, 0xd0, 0x72, 0x0b, 0x28,
	0x88, 0x51, 0xd6, 0x5b, 0x77, 0x73, 0x2c, 0xf3, 0x8f, 0x97, 0x8d, 0x56, 0xd0, 0x2c, 0x08, 0xa6,
	0xe5, 0x0e, 0x15, 0x39, 0x4d, 0x69, 0x37, 0x74, 0x37, 0xbc, 0x0c, 0x8f, 0x89, 0x84, 0x24, 0x64,
	0x34, 0x54, 0x3d, 0x08, 0xf5, 0xfc, 0xb8, 0x20, 0x23, 0x32, 0xa8, 0xfa, 0x93, 0x9b, 0xd3, 0x75,
	0xe4, 0xf8, 0xb3, 0x87, 0xca, 0xe3, 0xaf, 0x2b, 0x7c, 0xbf, 0x10, 0x34, 0xe5, 0xcd, 0x35, 0x55,
	0x6d, 0xe3, 0xb2, 0x71, 0x37, 0xd8, 0xb4, 0xde, 0x13, 0x5a, 0x4d, 0xf6, 0x47, 0xc1, 0x8d, 0xad,
	0xa1, 0xeb, 0xf5, 0x8b, 0x87, 0xca, 0x87, 0x90, 0xc1, 0x50, 0xc4, 0xf5, 0x8d, 0x79, 0x4d, 0x1d,
	0xab, 0xaf, 0x8c, 0x0a, 0x4b, 0x32, 0x4d, 0xc5, 0xce, 0xd3, 0x1b, 0x55, 0xbc, 0x7e, 0x82, 0x50,
	0x87, 0xf5, 0x5d, 0xda, 0xd7, 0x65, 0x37, 0x91, 0x6d, 0x9d, 0xa4, 0xed, 0x7d, 0xb7, 0x68, 0x71,
	0x7e, 0x7c, 0x3c, 0x6f, 0xf2, 0xfe, 0xff, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa8, 0x40, 0x4e,
	0x42, 0xb0, 0x0b, 0x00, 0x00,
}
