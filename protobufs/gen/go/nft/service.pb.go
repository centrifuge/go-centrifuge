// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nft/service.proto

package nftpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ResponseHeader struct {
	TransactionId        string   `protobuf:"bytes,5,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseHeader) Reset()         { *m = ResponseHeader{} }
func (m *ResponseHeader) String() string { return proto.CompactTextString(m) }
func (*ResponseHeader) ProtoMessage()    {}
func (*ResponseHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_15c9f80dd06d1ac1, []int{0}
}
func (m *ResponseHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseHeader.Unmarshal(m, b)
}
func (m *ResponseHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseHeader.Marshal(b, m, deterministic)
}
func (dst *ResponseHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseHeader.Merge(dst, src)
}
func (m *ResponseHeader) XXX_Size() int {
	return xxx_messageInfo_ResponseHeader.Size(m)
}
func (m *ResponseHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseHeader.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseHeader proto.InternalMessageInfo

func (m *ResponseHeader) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

type NFTMintRequest struct {
	// Document identifier
	Identifier string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// The contract address of the registry where the token should be minted
	RegistryAddress      string   `protobuf:"bytes,2,opt,name=registry_address,json=registryAddress,proto3" json:"registry_address,omitempty"`
	DepositAddress       string   `protobuf:"bytes,3,opt,name=deposit_address,json=depositAddress,proto3" json:"deposit_address,omitempty"`
	ProofFields          []string `protobuf:"bytes,4,rep,name=proof_fields,json=proofFields,proto3" json:"proof_fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NFTMintRequest) Reset()         { *m = NFTMintRequest{} }
func (m *NFTMintRequest) String() string { return proto.CompactTextString(m) }
func (*NFTMintRequest) ProtoMessage()    {}
func (*NFTMintRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_15c9f80dd06d1ac1, []int{1}
}
func (m *NFTMintRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NFTMintRequest.Unmarshal(m, b)
}
func (m *NFTMintRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NFTMintRequest.Marshal(b, m, deterministic)
}
func (dst *NFTMintRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NFTMintRequest.Merge(dst, src)
}
func (m *NFTMintRequest) XXX_Size() int {
	return xxx_messageInfo_NFTMintRequest.Size(m)
}
func (m *NFTMintRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NFTMintRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NFTMintRequest proto.InternalMessageInfo

func (m *NFTMintRequest) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *NFTMintRequest) GetRegistryAddress() string {
	if m != nil {
		return m.RegistryAddress
	}
	return ""
}

func (m *NFTMintRequest) GetDepositAddress() string {
	if m != nil {
		return m.DepositAddress
	}
	return ""
}

func (m *NFTMintRequest) GetProofFields() []string {
	if m != nil {
		return m.ProofFields
	}
	return nil
}

type NFTMintResponse struct {
	Header               *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	TokenId              string          `protobuf:"bytes,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *NFTMintResponse) Reset()         { *m = NFTMintResponse{} }
func (m *NFTMintResponse) String() string { return proto.CompactTextString(m) }
func (*NFTMintResponse) ProtoMessage()    {}
func (*NFTMintResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_15c9f80dd06d1ac1, []int{2}
}
func (m *NFTMintResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NFTMintResponse.Unmarshal(m, b)
}
func (m *NFTMintResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NFTMintResponse.Marshal(b, m, deterministic)
}
func (dst *NFTMintResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NFTMintResponse.Merge(dst, src)
}
func (m *NFTMintResponse) XXX_Size() int {
	return xxx_messageInfo_NFTMintResponse.Size(m)
}
func (m *NFTMintResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NFTMintResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NFTMintResponse proto.InternalMessageInfo

func (m *NFTMintResponse) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *NFTMintResponse) GetTokenId() string {
	if m != nil {
		return m.TokenId
	}
	return ""
}

func init() {
	proto.RegisterType((*ResponseHeader)(nil), "nft.ResponseHeader")
	proto.RegisterType((*NFTMintRequest)(nil), "nft.NFTMintRequest")
	proto.RegisterType((*NFTMintResponse)(nil), "nft.NFTMintResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NFTServiceClient is the client API for NFTService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NFTServiceClient interface {
	MintNFT(ctx context.Context, in *NFTMintRequest, opts ...grpc.CallOption) (*NFTMintResponse, error)
}

type nFTServiceClient struct {
	cc *grpc.ClientConn
}

func NewNFTServiceClient(cc *grpc.ClientConn) NFTServiceClient {
	return &nFTServiceClient{cc}
}

func (c *nFTServiceClient) MintNFT(ctx context.Context, in *NFTMintRequest, opts ...grpc.CallOption) (*NFTMintResponse, error) {
	out := new(NFTMintResponse)
	err := c.cc.Invoke(ctx, "/nft.NFTService/MintNFT", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NFTServiceServer is the server API for NFTService service.
type NFTServiceServer interface {
	MintNFT(context.Context, *NFTMintRequest) (*NFTMintResponse, error)
}

func RegisterNFTServiceServer(s *grpc.Server, srv NFTServiceServer) {
	s.RegisterService(&_NFTService_serviceDesc, srv)
}

func _NFTService_MintNFT_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NFTMintRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NFTServiceServer).MintNFT(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nft.NFTService/MintNFT",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NFTServiceServer).MintNFT(ctx, req.(*NFTMintRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NFTService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nft.NFTService",
	HandlerType: (*NFTServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MintNFT",
			Handler:    _NFTService_MintNFT_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nft/service.proto",
}

func init() { proto.RegisterFile("nft/service.proto", fileDescriptor_service_15c9f80dd06d1ac1) }

var fileDescriptor_service_15c9f80dd06d1ac1 = []byte{
	// 410 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0x87, 0xe5, 0x86, 0x36, 0x74, 0x52, 0x92, 0xb2, 0x70, 0x08, 0x11, 0x42, 0x8b, 0x25, 0x20,
	0xfc, 0x69, 0x2c, 0x95, 0x03, 0x12, 0xb7, 0x14, 0x64, 0xd1, 0x03, 0x51, 0x65, 0x72, 0x81, 0x4b,
	0xb4, 0xf5, 0xce, 0x9a, 0x15, 0xcd, 0xac, 0xd9, 0x9d, 0x50, 0x71, 0x45, 0xe2, 0x05, 0xe0, 0x21,
	0x78, 0x20, 0x5e, 0x81, 0x07, 0x41, 0x5e, 0xa7, 0x55, 0xa3, 0x9e, 0x2c, 0x7f, 0xfa, 0x76, 0xe6,
	0x37, 0x33, 0x70, 0x9b, 0x0c, 0x67, 0x01, 0xfd, 0x37, 0x5b, 0xe2, 0xa4, 0xf6, 0x8e, 0x9d, 0xe8,
	0x90, 0xe1, 0xd1, 0xfd, 0xca, 0xb9, 0xea, 0x0c, 0x33, 0x55, 0xdb, 0x4c, 0x11, 0x39, 0x56, 0x6c,
	0x1d, 0x85, 0x56, 0x19, 0xbd, 0x88, 0x9f, 0xf2, 0xa0, 0x42, 0x3a, 0x08, 0xe7, 0xaa, 0xaa, 0xd0,
	0x67, 0xae, 0x8e, 0xc6, 0x75, 0x3b, 0x7d, 0x05, 0xfd, 0x02, 0x43, 0xed, 0x28, 0xe0, 0x3b, 0x54,
	0x1a, 0xbd, 0x78, 0x04, 0x7d, 0xf6, 0x8a, 0x82, 0x2a, 0x1b, 0x6f, 0x61, 0xf5, 0x70, 0x5b, 0x26,
	0xe3, 0xdd, 0xe2, 0xd6, 0x15, 0x7a, 0xac, 0xd3, 0x3f, 0x09, 0xf4, 0x67, 0xf9, 0xfc, 0xbd, 0x25,
	0x2e, 0xf0, 0xeb, 0x0a, 0x03, 0x8b, 0x07, 0x00, 0x56, 0x23, 0xb1, 0x35, 0x16, 0xfd, 0x30, 0x89,
	0xaf, 0xae, 0x10, 0xf1, 0x14, 0xf6, 0x3d, 0x56, 0x36, 0xb0, 0xff, 0xbe, 0x50, 0x5a, 0x7b, 0x0c,
	0x61, 0xb8, 0x15, 0xad, 0xc1, 0x05, 0x9f, 0xb6, 0x58, 0x3c, 0x81, 0x81, 0xc6, 0xda, 0x05, 0xcb,
	0x97, 0x66, 0x27, 0x9a, 0xfd, 0x35, 0xbe, 0x10, 0x1f, 0xc2, 0x5e, 0xed, 0x9d, 0x33, 0x0b, 0x63,
	0xf1, 0x4c, 0x87, 0xe1, 0x0d, 0xd9, 0x19, 0xef, 0x16, 0xbd, 0xc8, 0xf2, 0x88, 0xd2, 0x8f, 0x30,
	0xb8, 0x0c, 0xda, 0x4e, 0x2a, 0x9e, 0xc3, 0xce, 0xe7, 0x38, 0x6d, 0x4c, 0xd9, 0x3b, 0xbc, 0x33,
	0x21, 0xc3, 0x93, 0xcd, 0x45, 0x14, 0x6b, 0x45, 0xdc, 0x83, 0x9b, 0xec, 0xbe, 0x60, 0x5c, 0x45,
	0x1b, 0xb7, 0x1b, 0xff, 0x8f, 0xf5, 0xe1, 0xcf, 0x04, 0x60, 0x96, 0xcf, 0x3f, 0xb4, 0x37, 0x12,
	0xe7, 0xd0, 0x6d, 0xda, 0xcc, 0xf2, 0xb9, 0x68, 0x2b, 0x6e, 0x2e, 0x68, 0x74, 0x77, 0x13, 0xb6,
	0xdd, 0xd2, 0xe9, 0xaf, 0xe9, 0x78, 0xf4, 0xb8, 0x41, 0x52, 0x91, 0x9c, 0xe5, 0x73, 0x69, 0xbc,
	0x5b, 0x4a, 0x25, 0xdf, 0x20, 0xb1, 0xb7, 0x66, 0x55, 0xa1, 0x7c, 0xeb, 0xca, 0xd5, 0x12, 0x89,
	0x7f, 0xfc, 0xfd, 0xf7, 0x7b, 0x6b, 0x3f, 0xed, 0x65, 0x31, 0x41, 0xb6, 0xb4, 0xc4, 0xaf, 0x93,
	0x67, 0x47, 0x12, 0xba, 0xa5, 0x5b, 0x36, 0xd5, 0x8f, 0xf6, 0xd6, 0x61, 0x4e, 0x9a, 0xf3, 0x9e,
	0x24, 0x9f, 0xb6, 0xc9, 0x70, 0x7d, 0x7a, 0xba, 0x13, 0xcf, 0xfd, 0xf2, 0x7f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xbb, 0x61, 0xbb, 0x11, 0x54, 0x02, 0x00, 0x00,
}
