// Code generated by protoc-gen-go. DO NOT EDIT.
// source: invoice/service.proto

package invoicepb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetRequest struct {
	Identifier           string   `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_519e33b3ce64044a, []int{0}
}
func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (dst *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(dst, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

type GetVersionRequest struct {
	Identifier           string   `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVersionRequest) Reset()         { *m = GetVersionRequest{} }
func (m *GetVersionRequest) String() string { return proto.CompactTextString(m) }
func (*GetVersionRequest) ProtoMessage()    {}
func (*GetVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_519e33b3ce64044a, []int{1}
}
func (m *GetVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVersionRequest.Unmarshal(m, b)
}
func (m *GetVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVersionRequest.Marshal(b, m, deterministic)
}
func (dst *GetVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVersionRequest.Merge(dst, src)
}
func (m *GetVersionRequest) XXX_Size() int {
	return xxx_messageInfo_GetVersionRequest.Size(m)
}
func (m *GetVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVersionRequest proto.InternalMessageInfo

func (m *GetVersionRequest) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *GetVersionRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type InvoiceCreatePayload struct {
	Collaborators        []string     `protobuf:"bytes,1,rep,name=collaborators,proto3" json:"collaborators,omitempty"`
	Data                 *InvoiceData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *InvoiceCreatePayload) Reset()         { *m = InvoiceCreatePayload{} }
func (m *InvoiceCreatePayload) String() string { return proto.CompactTextString(m) }
func (*InvoiceCreatePayload) ProtoMessage()    {}
func (*InvoiceCreatePayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_519e33b3ce64044a, []int{2}
}
func (m *InvoiceCreatePayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvoiceCreatePayload.Unmarshal(m, b)
}
func (m *InvoiceCreatePayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvoiceCreatePayload.Marshal(b, m, deterministic)
}
func (dst *InvoiceCreatePayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvoiceCreatePayload.Merge(dst, src)
}
func (m *InvoiceCreatePayload) XXX_Size() int {
	return xxx_messageInfo_InvoiceCreatePayload.Size(m)
}
func (m *InvoiceCreatePayload) XXX_DiscardUnknown() {
	xxx_messageInfo_InvoiceCreatePayload.DiscardUnknown(m)
}

var xxx_messageInfo_InvoiceCreatePayload proto.InternalMessageInfo

func (m *InvoiceCreatePayload) GetCollaborators() []string {
	if m != nil {
		return m.Collaborators
	}
	return nil
}

func (m *InvoiceCreatePayload) GetData() *InvoiceData {
	if m != nil {
		return m.Data
	}
	return nil
}

type InvoiceUpdatePayload struct {
	Identifier           string       `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Collaborators        []string     `protobuf:"bytes,2,rep,name=collaborators,proto3" json:"collaborators,omitempty"`
	Data                 *InvoiceData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *InvoiceUpdatePayload) Reset()         { *m = InvoiceUpdatePayload{} }
func (m *InvoiceUpdatePayload) String() string { return proto.CompactTextString(m) }
func (*InvoiceUpdatePayload) ProtoMessage()    {}
func (*InvoiceUpdatePayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_519e33b3ce64044a, []int{3}
}
func (m *InvoiceUpdatePayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvoiceUpdatePayload.Unmarshal(m, b)
}
func (m *InvoiceUpdatePayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvoiceUpdatePayload.Marshal(b, m, deterministic)
}
func (dst *InvoiceUpdatePayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvoiceUpdatePayload.Merge(dst, src)
}
func (m *InvoiceUpdatePayload) XXX_Size() int {
	return xxx_messageInfo_InvoiceUpdatePayload.Size(m)
}
func (m *InvoiceUpdatePayload) XXX_DiscardUnknown() {
	xxx_messageInfo_InvoiceUpdatePayload.DiscardUnknown(m)
}

var xxx_messageInfo_InvoiceUpdatePayload proto.InternalMessageInfo

func (m *InvoiceUpdatePayload) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *InvoiceUpdatePayload) GetCollaborators() []string {
	if m != nil {
		return m.Collaborators
	}
	return nil
}

func (m *InvoiceUpdatePayload) GetData() *InvoiceData {
	if m != nil {
		return m.Data
	}
	return nil
}

type InvoiceResponse struct {
	Header               *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Data                 *InvoiceData    `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *InvoiceResponse) Reset()         { *m = InvoiceResponse{} }
func (m *InvoiceResponse) String() string { return proto.CompactTextString(m) }
func (*InvoiceResponse) ProtoMessage()    {}
func (*InvoiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_519e33b3ce64044a, []int{4}
}
func (m *InvoiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvoiceResponse.Unmarshal(m, b)
}
func (m *InvoiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvoiceResponse.Marshal(b, m, deterministic)
}
func (dst *InvoiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvoiceResponse.Merge(dst, src)
}
func (m *InvoiceResponse) XXX_Size() int {
	return xxx_messageInfo_InvoiceResponse.Size(m)
}
func (m *InvoiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InvoiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InvoiceResponse proto.InternalMessageInfo

func (m *InvoiceResponse) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *InvoiceResponse) GetData() *InvoiceData {
	if m != nil {
		return m.Data
	}
	return nil
}

// ResponseHeader contains a set of common fields for most document
type ResponseHeader struct {
	DocumentId           string   `protobuf:"bytes,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	VersionId            string   `protobuf:"bytes,2,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	State                string   `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	Collaborators        []string `protobuf:"bytes,4,rep,name=collaborators,proto3" json:"collaborators,omitempty"`
	TransactionId        string   `protobuf:"bytes,5,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseHeader) Reset()         { *m = ResponseHeader{} }
func (m *ResponseHeader) String() string { return proto.CompactTextString(m) }
func (*ResponseHeader) ProtoMessage()    {}
func (*ResponseHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_519e33b3ce64044a, []int{5}
}
func (m *ResponseHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseHeader.Unmarshal(m, b)
}
func (m *ResponseHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseHeader.Marshal(b, m, deterministic)
}
func (dst *ResponseHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseHeader.Merge(dst, src)
}
func (m *ResponseHeader) XXX_Size() int {
	return xxx_messageInfo_ResponseHeader.Size(m)
}
func (m *ResponseHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseHeader.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseHeader proto.InternalMessageInfo

func (m *ResponseHeader) GetDocumentId() string {
	if m != nil {
		return m.DocumentId
	}
	return ""
}

func (m *ResponseHeader) GetVersionId() string {
	if m != nil {
		return m.VersionId
	}
	return ""
}

func (m *ResponseHeader) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *ResponseHeader) GetCollaborators() []string {
	if m != nil {
		return m.Collaborators
	}
	return nil
}

func (m *ResponseHeader) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

// InvoiceData is the default invoice schema
type InvoiceData struct {
	// invoice number or reference number
	Number string `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	// invoice status
	Status                  string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	SenderInvoiceId         string `protobuf:"bytes,3,opt,name=sender_invoice_id,json=senderInvoiceId,proto3" json:"sender_invoice_id,omitempty"`
	RecipientInvoiceId      string `protobuf:"bytes,4,opt,name=recipient_invoice_id,json=recipientInvoiceId,proto3" json:"recipient_invoice_id,omitempty"`
	SenderCompanyName       string `protobuf:"bytes,5,opt,name=sender_company_name,json=senderCompanyName,proto3" json:"sender_company_name,omitempty"`
	SenderContactPersonName string `protobuf:"bytes,6,opt,name=sender_contact_person_name,json=senderContactPersonName,proto3" json:"sender_contact_person_name,omitempty"`
	// street and address details of the sender company
	SenderStreet1 string `protobuf:"bytes,7,opt,name=sender_street1,json=senderStreet1,proto3" json:"sender_street1,omitempty"`
	SenderStreet2 string `protobuf:"bytes,8,opt,name=sender_street2,json=senderStreet2,proto3" json:"sender_street2,omitempty"`
	SenderCity    string `protobuf:"bytes,9,opt,name=sender_city,json=senderCity,proto3" json:"sender_city,omitempty"`
	SenderZipcode string `protobuf:"bytes,10,opt,name=sender_zipcode,json=senderZipcode,proto3" json:"sender_zipcode,omitempty"`
	SenderState   string `protobuf:"bytes,11,opt,name=sender_state,json=senderState,proto3" json:"sender_state,omitempty"`
	// country ISO code of the sender of this invoice
	SenderCountry            string `protobuf:"bytes,12,opt,name=sender_country,json=senderCountry,proto3" json:"sender_country,omitempty"`
	BillToCompanyName        string `protobuf:"bytes,43,opt,name=bill_to_company_name,json=billToCompanyName,proto3" json:"bill_to_company_name,omitempty"`
	BillToContactPersonName  string `protobuf:"bytes,44,opt,name=bill_to_contact_person_name,json=billToContactPersonName,proto3" json:"bill_to_contact_person_name,omitempty"`
	BillToStreet1            string `protobuf:"bytes,15,opt,name=bill_to_street1,json=billToStreet1,proto3" json:"bill_to_street1,omitempty"`
	BillToStreet2            string `protobuf:"bytes,16,opt,name=bill_to_street2,json=billToStreet2,proto3" json:"bill_to_street2,omitempty"`
	BillToCity               string `protobuf:"bytes,17,opt,name=bill_to_city,json=billToCity,proto3" json:"bill_to_city,omitempty"`
	BillToZipcode            string `protobuf:"bytes,18,opt,name=bill_to_zipcode,json=billToZipcode,proto3" json:"bill_to_zipcode,omitempty"`
	BillToState              string `protobuf:"bytes,50,opt,name=bill_to_state,json=billToState,proto3" json:"bill_to_state,omitempty"`
	BillToCountry            string `protobuf:"bytes,20,opt,name=bill_to_country,json=billToCountry,proto3" json:"bill_to_country,omitempty"`
	BillToVatNumber          string `protobuf:"bytes,21,opt,name=bill_to_vat_number,json=billToVatNumber,proto3" json:"bill_to_vat_number,omitempty"`
	BillToLocalTaxId         string `protobuf:"bytes,60,opt,name=bill_to_local_tax_id,json=billToLocalTaxId,proto3" json:"bill_to_local_tax_id,omitempty"`
	RemitToCompanyName       string `protobuf:"bytes,23,opt,name=remit_to_company_name,json=remitToCompanyName,proto3" json:"remit_to_company_name,omitempty"`
	RemitToContactPersonName string `protobuf:"bytes,24,opt,name=remit_to_contact_person_name,json=remitToContactPersonName,proto3" json:"remit_to_contact_person_name,omitempty"`
	RemitToStreet1           string `protobuf:"bytes,25,opt,name=remit_to_street1,json=remitToStreet1,proto3" json:"remit_to_street1,omitempty"`
	RemitToStreet2           string `protobuf:"bytes,26,opt,name=remit_to_street2,json=remitToStreet2,proto3" json:"remit_to_street2,omitempty"`
	RemitToCity              string `protobuf:"bytes,27,opt,name=remit_to_city,json=remitToCity,proto3" json:"remit_to_city,omitempty"`
	RemitToZipcode           string `protobuf:"bytes,28,opt,name=remit_to_zipcode,json=remitToZipcode,proto3" json:"remit_to_zipcode,omitempty"`
	RemitToState             string `protobuf:"bytes,30,opt,name=remit_to_state,json=remitToState,proto3" json:"remit_to_state,omitempty"`
	RemitToCountry           string `protobuf:"bytes,31,opt,name=remit_to_country,json=remitToCountry,proto3" json:"remit_to_country,omitempty"`
	RemitToVatNumber         string `protobuf:"bytes,32,opt,name=remit_to_vat_number,json=remitToVatNumber,proto3" json:"remit_to_vat_number,omitempty"`
	RemitToLocalTaxId        string `protobuf:"bytes,33,opt,name=remit_to_local_tax_id,json=remitToLocalTaxId,proto3" json:"remit_to_local_tax_id,omitempty"`
	RemitToTaxCountry        string `protobuf:"bytes,34,opt,name=remit_to_tax_country,json=remitToTaxCountry,proto3" json:"remit_to_tax_country,omitempty"`
	ShipToCompanyName        string `protobuf:"bytes,35,opt,name=ship_to_company_name,json=shipToCompanyName,proto3" json:"ship_to_company_name,omitempty"`
	ShipToContactPersonName  string `protobuf:"bytes,36,opt,name=ship_to_contact_person_name,json=shipToContactPersonName,proto3" json:"ship_to_contact_person_name,omitempty"`
	ShipToStreet1            string `protobuf:"bytes,37,opt,name=ship_to_street1,json=shipToStreet1,proto3" json:"ship_to_street1,omitempty"`
	ShipToStreet2            string `protobuf:"bytes,38,opt,name=ship_to_street2,json=shipToStreet2,proto3" json:"ship_to_street2,omitempty"`
	ShipToCity               string `protobuf:"bytes,39,opt,name=ship_to_city,json=shipToCity,proto3" json:"ship_to_city,omitempty"`
	ShipToZipcode            string `protobuf:"bytes,40,opt,name=ship_to_zipcode,json=shipToZipcode,proto3" json:"ship_to_zipcode,omitempty"`
	ShipToState              string `protobuf:"bytes,41,opt,name=ship_to_state,json=shipToState,proto3" json:"ship_to_state,omitempty"`
	ShipToCountry            string `protobuf:"bytes,42,opt,name=ship_to_country,json=shipToCountry,proto3" json:"ship_to_country,omitempty"`
	// ISO currency code
	Currency string `protobuf:"bytes,13,opt,name=currency,proto3" json:"currency,omitempty"`
	// invoice amount including tax
	GrossAmount string `protobuf:"bytes,14,opt,name=gross_amount,json=grossAmount,proto3" json:"gross_amount,omitempty"`
	// invoice amount excluding tax
	NetAmount      string `protobuf:"bytes,45,opt,name=net_amount,json=netAmount,proto3" json:"net_amount,omitempty"`
	TaxAmount      string `protobuf:"bytes,46,opt,name=tax_amount,json=taxAmount,proto3" json:"tax_amount,omitempty"`
	TaxRate        string `protobuf:"bytes,47,opt,name=tax_rate,json=taxRate,proto3" json:"tax_rate,omitempty"`
	TaxOnLineLevel bool   `protobuf:"varint,48,opt,name=tax_on_line_level,json=taxOnLineLevel,proto3" json:"tax_on_line_level,omitempty"`
	// centrifuge ID of the recipient
	Recipient string `protobuf:"bytes,49,opt,name=recipient,proto3" json:"recipient,omitempty"`
	// centrifuge ID of the sender
	Sender string `protobuf:"bytes,19,opt,name=sender,proto3" json:"sender,omitempty"`
	// centrifuge ID of the payee
	Payee          string `protobuf:"bytes,51,opt,name=payee,proto3" json:"payee,omitempty"`
	Comment        string `protobuf:"bytes,52,opt,name=comment,proto3" json:"comment,omitempty"`
	ShippingTerms  string `protobuf:"bytes,53,opt,name=shipping_terms,json=shippingTerms,proto3" json:"shipping_terms,omitempty"`
	RequesterEmail string `protobuf:"bytes,54,opt,name=requester_email,json=requesterEmail,proto3" json:"requester_email,omitempty"`
	RequesterName  string `protobuf:"bytes,55,opt,name=requester_name,json=requesterName,proto3" json:"requester_name,omitempty"`
	// number of the delivery note
	DeliveryNumber          string               `protobuf:"bytes,56,opt,name=delivery_number,json=deliveryNumber,proto3" json:"delivery_number,omitempty"`
	IsCreditNote            bool                 `protobuf:"varint,57,opt,name=is_credit_note,json=isCreditNote,proto3" json:"is_credit_note,omitempty"`
	CreditNoteInvoiceNumber string               `protobuf:"bytes,58,opt,name=credit_note_invoice_number,json=creditNoteInvoiceNumber,proto3" json:"credit_note_invoice_number,omitempty"`
	CreditForInvoiceDate    *timestamp.Timestamp `protobuf:"bytes,59,opt,name=credit_for_invoice_date,json=creditForInvoiceDate,proto3" json:"credit_for_invoice_date,omitempty"`
	DateDue                 *timestamp.Timestamp `protobuf:"bytes,22,opt,name=date_due,json=dateDue,proto3" json:"date_due,omitempty"`
	DatePaid                *timestamp.Timestamp `protobuf:"bytes,61,opt,name=date_paid,json=datePaid,proto3" json:"date_paid,omitempty"`
	DateUpdated             *timestamp.Timestamp `protobuf:"bytes,62,opt,name=date_updated,json=dateUpdated,proto3" json:"date_updated,omitempty"`
	DateCreated             *timestamp.Timestamp `protobuf:"bytes,63,opt,name=date_created,json=dateCreated,proto3" json:"date_created,omitempty"`
	Attachments             []*BinaryAttachment  `protobuf:"bytes,64,rep,name=attachments,proto3" json:"attachments,omitempty"`
	LineItems               []*InvoiceLineItem   `protobuf:"bytes,65,rep,name=line_items,json=lineItems,proto3" json:"line_items,omitempty"`
	PaymentDetails          []*PaymentDetails    `protobuf:"bytes,66,rep,name=payment_details,json=paymentDetails,proto3" json:"payment_details,omitempty"`
	TaxItems                []*InvoiceTaxItem    `protobuf:"bytes,67,rep,name=tax_items,json=taxItems,proto3" json:"tax_items,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}             `json:"-"`
	XXX_unrecognized        []byte               `json:"-"`
	XXX_sizecache           int32                `json:"-"`
}

func (m *InvoiceData) Reset()         { *m = InvoiceData{} }
func (m *InvoiceData) String() string { return proto.CompactTextString(m) }
func (*InvoiceData) ProtoMessage()    {}
func (*InvoiceData) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_519e33b3ce64044a, []int{6}
}
func (m *InvoiceData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvoiceData.Unmarshal(m, b)
}
func (m *InvoiceData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvoiceData.Marshal(b, m, deterministic)
}
func (dst *InvoiceData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvoiceData.Merge(dst, src)
}
func (m *InvoiceData) XXX_Size() int {
	return xxx_messageInfo_InvoiceData.Size(m)
}
func (m *InvoiceData) XXX_DiscardUnknown() {
	xxx_messageInfo_InvoiceData.DiscardUnknown(m)
}

var xxx_messageInfo_InvoiceData proto.InternalMessageInfo

func (m *InvoiceData) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *InvoiceData) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *InvoiceData) GetSenderInvoiceId() string {
	if m != nil {
		return m.SenderInvoiceId
	}
	return ""
}

func (m *InvoiceData) GetRecipientInvoiceId() string {
	if m != nil {
		return m.RecipientInvoiceId
	}
	return ""
}

func (m *InvoiceData) GetSenderCompanyName() string {
	if m != nil {
		return m.SenderCompanyName
	}
	return ""
}

func (m *InvoiceData) GetSenderContactPersonName() string {
	if m != nil {
		return m.SenderContactPersonName
	}
	return ""
}

func (m *InvoiceData) GetSenderStreet1() string {
	if m != nil {
		return m.SenderStreet1
	}
	return ""
}

func (m *InvoiceData) GetSenderStreet2() string {
	if m != nil {
		return m.SenderStreet2
	}
	return ""
}

func (m *InvoiceData) GetSenderCity() string {
	if m != nil {
		return m.SenderCity
	}
	return ""
}

func (m *InvoiceData) GetSenderZipcode() string {
	if m != nil {
		return m.SenderZipcode
	}
	return ""
}

func (m *InvoiceData) GetSenderState() string {
	if m != nil {
		return m.SenderState
	}
	return ""
}

func (m *InvoiceData) GetSenderCountry() string {
	if m != nil {
		return m.SenderCountry
	}
	return ""
}

func (m *InvoiceData) GetBillToCompanyName() string {
	if m != nil {
		return m.BillToCompanyName
	}
	return ""
}

func (m *InvoiceData) GetBillToContactPersonName() string {
	if m != nil {
		return m.BillToContactPersonName
	}
	return ""
}

func (m *InvoiceData) GetBillToStreet1() string {
	if m != nil {
		return m.BillToStreet1
	}
	return ""
}

func (m *InvoiceData) GetBillToStreet2() string {
	if m != nil {
		return m.BillToStreet2
	}
	return ""
}

func (m *InvoiceData) GetBillToCity() string {
	if m != nil {
		return m.BillToCity
	}
	return ""
}

func (m *InvoiceData) GetBillToZipcode() string {
	if m != nil {
		return m.BillToZipcode
	}
	return ""
}

func (m *InvoiceData) GetBillToState() string {
	if m != nil {
		return m.BillToState
	}
	return ""
}

func (m *InvoiceData) GetBillToCountry() string {
	if m != nil {
		return m.BillToCountry
	}
	return ""
}

func (m *InvoiceData) GetBillToVatNumber() string {
	if m != nil {
		return m.BillToVatNumber
	}
	return ""
}

func (m *InvoiceData) GetBillToLocalTaxId() string {
	if m != nil {
		return m.BillToLocalTaxId
	}
	return ""
}

func (m *InvoiceData) GetRemitToCompanyName() string {
	if m != nil {
		return m.RemitToCompanyName
	}
	return ""
}

func (m *InvoiceData) GetRemitToContactPersonName() string {
	if m != nil {
		return m.RemitToContactPersonName
	}
	return ""
}

func (m *InvoiceData) GetRemitToStreet1() string {
	if m != nil {
		return m.RemitToStreet1
	}
	return ""
}

func (m *InvoiceData) GetRemitToStreet2() string {
	if m != nil {
		return m.RemitToStreet2
	}
	return ""
}

func (m *InvoiceData) GetRemitToCity() string {
	if m != nil {
		return m.RemitToCity
	}
	return ""
}

func (m *InvoiceData) GetRemitToZipcode() string {
	if m != nil {
		return m.RemitToZipcode
	}
	return ""
}

func (m *InvoiceData) GetRemitToState() string {
	if m != nil {
		return m.RemitToState
	}
	return ""
}

func (m *InvoiceData) GetRemitToCountry() string {
	if m != nil {
		return m.RemitToCountry
	}
	return ""
}

func (m *InvoiceData) GetRemitToVatNumber() string {
	if m != nil {
		return m.RemitToVatNumber
	}
	return ""
}

func (m *InvoiceData) GetRemitToLocalTaxId() string {
	if m != nil {
		return m.RemitToLocalTaxId
	}
	return ""
}

func (m *InvoiceData) GetRemitToTaxCountry() string {
	if m != nil {
		return m.RemitToTaxCountry
	}
	return ""
}

func (m *InvoiceData) GetShipToCompanyName() string {
	if m != nil {
		return m.ShipToCompanyName
	}
	return ""
}

func (m *InvoiceData) GetShipToContactPersonName() string {
	if m != nil {
		return m.ShipToContactPersonName
	}
	return ""
}

func (m *InvoiceData) GetShipToStreet1() string {
	if m != nil {
		return m.ShipToStreet1
	}
	return ""
}

func (m *InvoiceData) GetShipToStreet2() string {
	if m != nil {
		return m.ShipToStreet2
	}
	return ""
}

func (m *InvoiceData) GetShipToCity() string {
	if m != nil {
		return m.ShipToCity
	}
	return ""
}

func (m *InvoiceData) GetShipToZipcode() string {
	if m != nil {
		return m.ShipToZipcode
	}
	return ""
}

func (m *InvoiceData) GetShipToState() string {
	if m != nil {
		return m.ShipToState
	}
	return ""
}

func (m *InvoiceData) GetShipToCountry() string {
	if m != nil {
		return m.ShipToCountry
	}
	return ""
}

func (m *InvoiceData) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *InvoiceData) GetGrossAmount() string {
	if m != nil {
		return m.GrossAmount
	}
	return ""
}

func (m *InvoiceData) GetNetAmount() string {
	if m != nil {
		return m.NetAmount
	}
	return ""
}

func (m *InvoiceData) GetTaxAmount() string {
	if m != nil {
		return m.TaxAmount
	}
	return ""
}

func (m *InvoiceData) GetTaxRate() string {
	if m != nil {
		return m.TaxRate
	}
	return ""
}

func (m *InvoiceData) GetTaxOnLineLevel() bool {
	if m != nil {
		return m.TaxOnLineLevel
	}
	return false
}

func (m *InvoiceData) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

func (m *InvoiceData) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *InvoiceData) GetPayee() string {
	if m != nil {
		return m.Payee
	}
	return ""
}

func (m *InvoiceData) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *InvoiceData) GetShippingTerms() string {
	if m != nil {
		return m.ShippingTerms
	}
	return ""
}

func (m *InvoiceData) GetRequesterEmail() string {
	if m != nil {
		return m.RequesterEmail
	}
	return ""
}

func (m *InvoiceData) GetRequesterName() string {
	if m != nil {
		return m.RequesterName
	}
	return ""
}

func (m *InvoiceData) GetDeliveryNumber() string {
	if m != nil {
		return m.DeliveryNumber
	}
	return ""
}

func (m *InvoiceData) GetIsCreditNote() bool {
	if m != nil {
		return m.IsCreditNote
	}
	return false
}

func (m *InvoiceData) GetCreditNoteInvoiceNumber() string {
	if m != nil {
		return m.CreditNoteInvoiceNumber
	}
	return ""
}

func (m *InvoiceData) GetCreditForInvoiceDate() *timestamp.Timestamp {
	if m != nil {
		return m.CreditForInvoiceDate
	}
	return nil
}

func (m *InvoiceData) GetDateDue() *timestamp.Timestamp {
	if m != nil {
		return m.DateDue
	}
	return nil
}

func (m *InvoiceData) GetDatePaid() *timestamp.Timestamp {
	if m != nil {
		return m.DatePaid
	}
	return nil
}

func (m *InvoiceData) GetDateUpdated() *timestamp.Timestamp {
	if m != nil {
		return m.DateUpdated
	}
	return nil
}

func (m *InvoiceData) GetDateCreated() *timestamp.Timestamp {
	if m != nil {
		return m.DateCreated
	}
	return nil
}

func (m *InvoiceData) GetAttachments() []*BinaryAttachment {
	if m != nil {
		return m.Attachments
	}
	return nil
}

func (m *InvoiceData) GetLineItems() []*InvoiceLineItem {
	if m != nil {
		return m.LineItems
	}
	return nil
}

func (m *InvoiceData) GetPaymentDetails() []*PaymentDetails {
	if m != nil {
		return m.PaymentDetails
	}
	return nil
}

func (m *InvoiceData) GetTaxItems() []*InvoiceTaxItem {
	if m != nil {
		return m.TaxItems
	}
	return nil
}

type InvoiceTaxItem struct {
	ItemNumber           string   `protobuf:"bytes,1,opt,name=item_number,json=itemNumber,proto3" json:"item_number,omitempty"`
	InvoiceItemNumber    string   `protobuf:"bytes,2,opt,name=invoice_item_number,json=invoiceItemNumber,proto3" json:"invoice_item_number,omitempty"`
	TaxAmount            string   `protobuf:"bytes,3,opt,name=tax_amount,json=taxAmount,proto3" json:"tax_amount,omitempty"`
	TaxRate              string   `protobuf:"bytes,4,opt,name=tax_rate,json=taxRate,proto3" json:"tax_rate,omitempty"`
	TaxCode              string   `protobuf:"bytes,5,opt,name=tax_code,json=taxCode,proto3" json:"tax_code,omitempty"`
	TaxBaseAmount        string   `protobuf:"bytes,6,opt,name=tax_base_amount,json=taxBaseAmount,proto3" json:"tax_base_amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InvoiceTaxItem) Reset()         { *m = InvoiceTaxItem{} }
func (m *InvoiceTaxItem) String() string { return proto.CompactTextString(m) }
func (*InvoiceTaxItem) ProtoMessage()    {}
func (*InvoiceTaxItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_519e33b3ce64044a, []int{7}
}
func (m *InvoiceTaxItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvoiceTaxItem.Unmarshal(m, b)
}
func (m *InvoiceTaxItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvoiceTaxItem.Marshal(b, m, deterministic)
}
func (dst *InvoiceTaxItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvoiceTaxItem.Merge(dst, src)
}
func (m *InvoiceTaxItem) XXX_Size() int {
	return xxx_messageInfo_InvoiceTaxItem.Size(m)
}
func (m *InvoiceTaxItem) XXX_DiscardUnknown() {
	xxx_messageInfo_InvoiceTaxItem.DiscardUnknown(m)
}

var xxx_messageInfo_InvoiceTaxItem proto.InternalMessageInfo

func (m *InvoiceTaxItem) GetItemNumber() string {
	if m != nil {
		return m.ItemNumber
	}
	return ""
}

func (m *InvoiceTaxItem) GetInvoiceItemNumber() string {
	if m != nil {
		return m.InvoiceItemNumber
	}
	return ""
}

func (m *InvoiceTaxItem) GetTaxAmount() string {
	if m != nil {
		return m.TaxAmount
	}
	return ""
}

func (m *InvoiceTaxItem) GetTaxRate() string {
	if m != nil {
		return m.TaxRate
	}
	return ""
}

func (m *InvoiceTaxItem) GetTaxCode() string {
	if m != nil {
		return m.TaxCode
	}
	return ""
}

func (m *InvoiceTaxItem) GetTaxBaseAmount() string {
	if m != nil {
		return m.TaxBaseAmount
	}
	return ""
}

type BinaryAttachment struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// mime type of attached file
	FileType string `protobuf:"bytes,2,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	// in bytes
	Size uint64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Data string `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	// the md5 checksum of the original file for easier verification - optional
	Checksum             string   `protobuf:"bytes,5,opt,name=checksum,proto3" json:"checksum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BinaryAttachment) Reset()         { *m = BinaryAttachment{} }
func (m *BinaryAttachment) String() string { return proto.CompactTextString(m) }
func (*BinaryAttachment) ProtoMessage()    {}
func (*BinaryAttachment) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_519e33b3ce64044a, []int{8}
}
func (m *BinaryAttachment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BinaryAttachment.Unmarshal(m, b)
}
func (m *BinaryAttachment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BinaryAttachment.Marshal(b, m, deterministic)
}
func (dst *BinaryAttachment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BinaryAttachment.Merge(dst, src)
}
func (m *BinaryAttachment) XXX_Size() int {
	return xxx_messageInfo_BinaryAttachment.Size(m)
}
func (m *BinaryAttachment) XXX_DiscardUnknown() {
	xxx_messageInfo_BinaryAttachment.DiscardUnknown(m)
}

var xxx_messageInfo_BinaryAttachment proto.InternalMessageInfo

func (m *BinaryAttachment) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BinaryAttachment) GetFileType() string {
	if m != nil {
		return m.FileType
	}
	return ""
}

func (m *BinaryAttachment) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *BinaryAttachment) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *BinaryAttachment) GetChecksum() string {
	if m != nil {
		return m.Checksum
	}
	return ""
}

type PaymentDetails struct {
	// identifying this payment. could be a sequential number, could be a transaction hash of the crypto payment
	Id           string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DateExecuted *timestamp.Timestamp `protobuf:"bytes,2,opt,name=date_executed,json=dateExecuted,proto3" json:"date_executed,omitempty"`
	// centrifuge id of payee
	Payee string `protobuf:"bytes,3,opt,name=payee,proto3" json:"payee,omitempty"`
	// centrifuge id of payer
	Payer    string `protobuf:"bytes,4,opt,name=payer,proto3" json:"payer,omitempty"`
	Amount   string `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency string `protobuf:"bytes,6,opt,name=currency,proto3" json:"currency,omitempty"`
	// payment reference (e.g. reference field on bank transfer)
	Reference             string `protobuf:"bytes,7,opt,name=reference,proto3" json:"reference,omitempty"`
	BankName              string `protobuf:"bytes,8,opt,name=bank_name,json=bankName,proto3" json:"bank_name,omitempty"`
	BankAddress           string `protobuf:"bytes,9,opt,name=bank_address,json=bankAddress,proto3" json:"bank_address,omitempty"`
	BankCountry           string `protobuf:"bytes,10,opt,name=bank_country,json=bankCountry,proto3" json:"bank_country,omitempty"`
	BankAccountNumber     string `protobuf:"bytes,11,opt,name=bank_account_number,json=bankAccountNumber,proto3" json:"bank_account_number,omitempty"`
	BankAccountCurrency   string `protobuf:"bytes,12,opt,name=bank_account_currency,json=bankAccountCurrency,proto3" json:"bank_account_currency,omitempty"`
	BankAccountHolderName string `protobuf:"bytes,13,opt,name=bank_account_holder_name,json=bankAccountHolderName,proto3" json:"bank_account_holder_name,omitempty"`
	BankKey               string `protobuf:"bytes,14,opt,name=bank_key,json=bankKey,proto3" json:"bank_key,omitempty"`
	// the ID of the chain to use in URI format. e.g. "ethereum://42/<tokenaddress>"
	CryptoChainUri string `protobuf:"bytes,15,opt,name=crypto_chain_uri,json=cryptoChainUri,proto3" json:"crypto_chain_uri,omitempty"`
	// the transaction in which the payment happened
	CryptoTransactionId string `protobuf:"bytes,16,opt,name=crypto_transaction_id,json=cryptoTransactionId,proto3" json:"crypto_transaction_id,omitempty"`
	// from address
	CryptoFrom string `protobuf:"bytes,17,opt,name=crypto_from,json=cryptoFrom,proto3" json:"crypto_from,omitempty"`
	// to address
	CryptoTo             string   `protobuf:"bytes,18,opt,name=crypto_to,json=cryptoTo,proto3" json:"crypto_to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymentDetails) Reset()         { *m = PaymentDetails{} }
func (m *PaymentDetails) String() string { return proto.CompactTextString(m) }
func (*PaymentDetails) ProtoMessage()    {}
func (*PaymentDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_519e33b3ce64044a, []int{9}
}
func (m *PaymentDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentDetails.Unmarshal(m, b)
}
func (m *PaymentDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentDetails.Marshal(b, m, deterministic)
}
func (dst *PaymentDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentDetails.Merge(dst, src)
}
func (m *PaymentDetails) XXX_Size() int {
	return xxx_messageInfo_PaymentDetails.Size(m)
}
func (m *PaymentDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentDetails.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentDetails proto.InternalMessageInfo

func (m *PaymentDetails) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PaymentDetails) GetDateExecuted() *timestamp.Timestamp {
	if m != nil {
		return m.DateExecuted
	}
	return nil
}

func (m *PaymentDetails) GetPayee() string {
	if m != nil {
		return m.Payee
	}
	return ""
}

func (m *PaymentDetails) GetPayer() string {
	if m != nil {
		return m.Payer
	}
	return ""
}

func (m *PaymentDetails) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *PaymentDetails) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *PaymentDetails) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

func (m *PaymentDetails) GetBankName() string {
	if m != nil {
		return m.BankName
	}
	return ""
}

func (m *PaymentDetails) GetBankAddress() string {
	if m != nil {
		return m.BankAddress
	}
	return ""
}

func (m *PaymentDetails) GetBankCountry() string {
	if m != nil {
		return m.BankCountry
	}
	return ""
}

func (m *PaymentDetails) GetBankAccountNumber() string {
	if m != nil {
		return m.BankAccountNumber
	}
	return ""
}

func (m *PaymentDetails) GetBankAccountCurrency() string {
	if m != nil {
		return m.BankAccountCurrency
	}
	return ""
}

func (m *PaymentDetails) GetBankAccountHolderName() string {
	if m != nil {
		return m.BankAccountHolderName
	}
	return ""
}

func (m *PaymentDetails) GetBankKey() string {
	if m != nil {
		return m.BankKey
	}
	return ""
}

func (m *PaymentDetails) GetCryptoChainUri() string {
	if m != nil {
		return m.CryptoChainUri
	}
	return ""
}

func (m *PaymentDetails) GetCryptoTransactionId() string {
	if m != nil {
		return m.CryptoTransactionId
	}
	return ""
}

func (m *PaymentDetails) GetCryptoFrom() string {
	if m != nil {
		return m.CryptoFrom
	}
	return ""
}

func (m *PaymentDetails) GetCryptoTo() string {
	if m != nil {
		return m.CryptoTo
	}
	return ""
}

type InvoiceLineItem struct {
	ItemNumber    string `protobuf:"bytes,1,opt,name=item_number,json=itemNumber,proto3" json:"item_number,omitempty"`
	Description   string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	SenderPartNo  string `protobuf:"bytes,3,opt,name=sender_part_no,json=senderPartNo,proto3" json:"sender_part_no,omitempty"`
	PricePerUnit  string `protobuf:"bytes,4,opt,name=price_per_unit,json=pricePerUnit,proto3" json:"price_per_unit,omitempty"`
	Quantity      string `protobuf:"bytes,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
	UnitOfMeasure string `protobuf:"bytes,6,opt,name=unit_of_measure,json=unitOfMeasure,proto3" json:"unit_of_measure,omitempty"`
	NetWeight     string `protobuf:"bytes,7,opt,name=net_weight,json=netWeight,proto3" json:"net_weight,omitempty"`
	TaxAmount     string `protobuf:"bytes,8,opt,name=tax_amount,json=taxAmount,proto3" json:"tax_amount,omitempty"`
	TaxRate       string `protobuf:"bytes,9,opt,name=tax_rate,json=taxRate,proto3" json:"tax_rate,omitempty"`
	TaxCode       string `protobuf:"bytes,10,opt,name=tax_code,json=taxCode,proto3" json:"tax_code,omitempty"`
	// the total amount of the line item
	TotalAmount             string   `protobuf:"bytes,11,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	PurchaseOrderNumber     string   `protobuf:"bytes,12,opt,name=purchase_order_number,json=purchaseOrderNumber,proto3" json:"purchase_order_number,omitempty"`
	PurchaseOrderItemNumber string   `protobuf:"bytes,13,opt,name=purchase_order_item_number,json=purchaseOrderItemNumber,proto3" json:"purchase_order_item_number,omitempty"`
	DeliveryNoteNumber      string   `protobuf:"bytes,14,opt,name=delivery_note_number,json=deliveryNoteNumber,proto3" json:"delivery_note_number,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *InvoiceLineItem) Reset()         { *m = InvoiceLineItem{} }
func (m *InvoiceLineItem) String() string { return proto.CompactTextString(m) }
func (*InvoiceLineItem) ProtoMessage()    {}
func (*InvoiceLineItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_519e33b3ce64044a, []int{10}
}
func (m *InvoiceLineItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvoiceLineItem.Unmarshal(m, b)
}
func (m *InvoiceLineItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvoiceLineItem.Marshal(b, m, deterministic)
}
func (dst *InvoiceLineItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvoiceLineItem.Merge(dst, src)
}
func (m *InvoiceLineItem) XXX_Size() int {
	return xxx_messageInfo_InvoiceLineItem.Size(m)
}
func (m *InvoiceLineItem) XXX_DiscardUnknown() {
	xxx_messageInfo_InvoiceLineItem.DiscardUnknown(m)
}

var xxx_messageInfo_InvoiceLineItem proto.InternalMessageInfo

func (m *InvoiceLineItem) GetItemNumber() string {
	if m != nil {
		return m.ItemNumber
	}
	return ""
}

func (m *InvoiceLineItem) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *InvoiceLineItem) GetSenderPartNo() string {
	if m != nil {
		return m.SenderPartNo
	}
	return ""
}

func (m *InvoiceLineItem) GetPricePerUnit() string {
	if m != nil {
		return m.PricePerUnit
	}
	return ""
}

func (m *InvoiceLineItem) GetQuantity() string {
	if m != nil {
		return m.Quantity
	}
	return ""
}

func (m *InvoiceLineItem) GetUnitOfMeasure() string {
	if m != nil {
		return m.UnitOfMeasure
	}
	return ""
}

func (m *InvoiceLineItem) GetNetWeight() string {
	if m != nil {
		return m.NetWeight
	}
	return ""
}

func (m *InvoiceLineItem) GetTaxAmount() string {
	if m != nil {
		return m.TaxAmount
	}
	return ""
}

func (m *InvoiceLineItem) GetTaxRate() string {
	if m != nil {
		return m.TaxRate
	}
	return ""
}

func (m *InvoiceLineItem) GetTaxCode() string {
	if m != nil {
		return m.TaxCode
	}
	return ""
}

func (m *InvoiceLineItem) GetTotalAmount() string {
	if m != nil {
		return m.TotalAmount
	}
	return ""
}

func (m *InvoiceLineItem) GetPurchaseOrderNumber() string {
	if m != nil {
		return m.PurchaseOrderNumber
	}
	return ""
}

func (m *InvoiceLineItem) GetPurchaseOrderItemNumber() string {
	if m != nil {
		return m.PurchaseOrderItemNumber
	}
	return ""
}

func (m *InvoiceLineItem) GetDeliveryNoteNumber() string {
	if m != nil {
		return m.DeliveryNoteNumber
	}
	return ""
}

func init() {
	proto.RegisterType((*GetRequest)(nil), "invoice.GetRequest")
	proto.RegisterType((*GetVersionRequest)(nil), "invoice.GetVersionRequest")
	proto.RegisterType((*InvoiceCreatePayload)(nil), "invoice.InvoiceCreatePayload")
	proto.RegisterType((*InvoiceUpdatePayload)(nil), "invoice.InvoiceUpdatePayload")
	proto.RegisterType((*InvoiceResponse)(nil), "invoice.InvoiceResponse")
	proto.RegisterType((*ResponseHeader)(nil), "invoice.ResponseHeader")
	proto.RegisterType((*InvoiceData)(nil), "invoice.InvoiceData")
	proto.RegisterType((*InvoiceTaxItem)(nil), "invoice.InvoiceTaxItem")
	proto.RegisterType((*BinaryAttachment)(nil), "invoice.BinaryAttachment")
	proto.RegisterType((*PaymentDetails)(nil), "invoice.PaymentDetails")
	proto.RegisterType((*InvoiceLineItem)(nil), "invoice.InvoiceLineItem")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DocumentServiceClient is the client API for DocumentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DocumentServiceClient interface {
	Create(ctx context.Context, in *InvoiceCreatePayload, opts ...grpc.CallOption) (*InvoiceResponse, error)
	Update(ctx context.Context, in *InvoiceUpdatePayload, opts ...grpc.CallOption) (*InvoiceResponse, error)
	GetVersion(ctx context.Context, in *GetVersionRequest, opts ...grpc.CallOption) (*InvoiceResponse, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*InvoiceResponse, error)
}

type documentServiceClient struct {
	cc *grpc.ClientConn
}

func NewDocumentServiceClient(cc *grpc.ClientConn) DocumentServiceClient {
	return &documentServiceClient{cc}
}

func (c *documentServiceClient) Create(ctx context.Context, in *InvoiceCreatePayload, opts ...grpc.CallOption) (*InvoiceResponse, error) {
	out := new(InvoiceResponse)
	err := c.cc.Invoke(ctx, "/invoice.DocumentService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *documentServiceClient) Update(ctx context.Context, in *InvoiceUpdatePayload, opts ...grpc.CallOption) (*InvoiceResponse, error) {
	out := new(InvoiceResponse)
	err := c.cc.Invoke(ctx, "/invoice.DocumentService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *documentServiceClient) GetVersion(ctx context.Context, in *GetVersionRequest, opts ...grpc.CallOption) (*InvoiceResponse, error) {
	out := new(InvoiceResponse)
	err := c.cc.Invoke(ctx, "/invoice.DocumentService/GetVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *documentServiceClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*InvoiceResponse, error) {
	out := new(InvoiceResponse)
	err := c.cc.Invoke(ctx, "/invoice.DocumentService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DocumentServiceServer is the server API for DocumentService service.
type DocumentServiceServer interface {
	Create(context.Context, *InvoiceCreatePayload) (*InvoiceResponse, error)
	Update(context.Context, *InvoiceUpdatePayload) (*InvoiceResponse, error)
	GetVersion(context.Context, *GetVersionRequest) (*InvoiceResponse, error)
	Get(context.Context, *GetRequest) (*InvoiceResponse, error)
}

func RegisterDocumentServiceServer(s *grpc.Server, srv DocumentServiceServer) {
	s.RegisterService(&_DocumentService_serviceDesc, srv)
}

func _DocumentService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InvoiceCreatePayload)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DocumentServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/invoice.DocumentService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DocumentServiceServer).Create(ctx, req.(*InvoiceCreatePayload))
	}
	return interceptor(ctx, in, info, handler)
}

func _DocumentService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InvoiceUpdatePayload)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DocumentServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/invoice.DocumentService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DocumentServiceServer).Update(ctx, req.(*InvoiceUpdatePayload))
	}
	return interceptor(ctx, in, info, handler)
}

func _DocumentService_GetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DocumentServiceServer).GetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/invoice.DocumentService/GetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DocumentServiceServer).GetVersion(ctx, req.(*GetVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DocumentService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DocumentServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/invoice.DocumentService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DocumentServiceServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DocumentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "invoice.DocumentService",
	HandlerType: (*DocumentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _DocumentService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _DocumentService_Update_Handler,
		},
		{
			MethodName: "GetVersion",
			Handler:    _DocumentService_GetVersion_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _DocumentService_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "invoice/service.proto",
}

func init() { proto.RegisterFile("invoice/service.proto", fileDescriptor_service_519e33b3ce64044a) }

var fileDescriptor_service_519e33b3ce64044a = []byte{
	// 2194 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x58, 0x5f, 0x73, 0x1b, 0xb7,
	0x11, 0x1f, 0x4a, 0xb2, 0x4c, 0x82, 0x14, 0x65, 0x43, 0x52, 0x74, 0xa6, 0x9d, 0x98, 0x66, 0xfd,
	0x47, 0x71, 0x6c, 0xd2, 0x66, 0x92, 0xba, 0x89, 0xf3, 0x4f, 0x92, 0x13, 0x47, 0x53, 0xc7, 0x56,
	0x19, 0x39, 0x9d, 0xc9, 0xcb, 0x0d, 0x74, 0x07, 0x8a, 0x18, 0xf3, 0x0e, 0x17, 0x1c, 0xa8, 0x88,
	0xce, 0xe4, 0xa5, 0xd3, 0x69, 0xdf, 0xdd, 0x4e, 0x1f, 0xfb, 0x25, 0xfa, 0x09, 0xfa, 0x19, 0xfa,
	0xde, 0xa7, 0x7e, 0x90, 0xce, 0x02, 0x8b, 0xfb, 0x43, 0xaa, 0x52, 0xfa, 0x44, 0x62, 0xf7, 0xb7,
	0x7f, 0xb0, 0x8b, 0x5d, 0x2c, 0x8e, 0x6c, 0x88, 0xf8, 0x58, 0x8a, 0x80, 0xf7, 0x52, 0xae, 0x8e,
	0x45, 0xc0, 0xbb, 0x89, 0x92, 0x5a, 0xd2, 0x8b, 0x48, 0x6e, 0x5d, 0x3b, 0x92, 0xf2, 0x68, 0xcc,
	0x7b, 0x2c, 0x11, 0x3d, 0x16, 0xc7, 0x52, 0x33, 0x2d, 0x64, 0x9c, 0x5a, 0x58, 0xeb, 0x3a, 0x72,
	0xcd, 0xea, 0x70, 0x32, 0xec, 0x69, 0x11, 0xf1, 0x54, 0xb3, 0x28, 0x41, 0xc0, 0x3d, 0xf3, 0x13,
	0xdc, 0x3f, 0xe2, 0xf1, 0xfd, 0xf4, 0x47, 0x76, 0x74, 0xc4, 0x55, 0x4f, 0x26, 0x46, 0xc5, 0xbc,
	0xba, 0xce, 0x3d, 0x42, 0x9e, 0x72, 0x3d, 0xe0, 0x3f, 0x4c, 0x78, 0xaa, 0xe9, 0x3b, 0x84, 0x88,
	0x90, 0xc7, 0x5a, 0x0c, 0x05, 0x57, 0x5e, 0xa5, 0x5d, 0xd9, 0xaa, 0x0d, 0x0a, 0x94, 0xce, 0x37,
	0xe4, 0xf2, 0x53, 0xae, 0xbf, 0xe3, 0x2a, 0x15, 0x32, 0xfe, 0x85, 0x42, 0xd4, 0x23, 0x17, 0x8f,
	0xad, 0x84, 0xb7, 0x60, 0x98, 0x6e, 0xd9, 0x19, 0x92, 0xf5, 0x3d, 0xbb, 0xe9, 0x5d, 0xc5, 0x99,
	0xe6, 0xfb, 0x6c, 0x3a, 0x96, 0x2c, 0xa4, 0x37, 0xc9, 0x4a, 0x20, 0xc7, 0x63, 0x76, 0x28, 0x15,
	0xd3, 0x52, 0xa5, 0x5e, 0xa5, 0xbd, 0xb8, 0x55, 0x1b, 0x94, 0x89, 0x74, 0x8b, 0x2c, 0x85, 0x4c,
	0x33, 0xa3, 0xb4, 0xde, 0x5f, 0xef, 0x62, 0xfc, 0xba, 0xa8, 0xf2, 0x09, 0xd3, 0x6c, 0x60, 0x10,
	0x9d, 0x3f, 0x55, 0x32, 0x43, 0x2f, 0x93, 0xb0, 0x60, 0xe8, 0x3c, 0xd7, 0xe7, 0x1c, 0x59, 0x38,
	0xcb, 0x91, 0xc5, 0x73, 0x1d, 0x19, 0x93, 0x55, 0x24, 0x0e, 0x78, 0x9a, 0xc8, 0x38, 0xe5, 0xb4,
	0x47, 0x96, 0x47, 0x9c, 0x85, 0x68, 0xbe, 0xde, 0xdf, 0xcc, 0xc4, 0x1d, 0xe4, 0x6b, 0xc3, 0x1e,
	0x20, 0xec, 0xff, 0xd8, 0xf6, 0x3f, 0x2a, 0xa4, 0x59, 0x56, 0x42, 0xaf, 0x93, 0x7a, 0x28, 0x83,
	0x49, 0xc4, 0x63, 0xed, 0x8b, 0xd0, 0xed, 0xd8, 0x91, 0xf6, 0x42, 0xfa, 0x36, 0x21, 0x98, 0x1d,
	0xe0, 0xdb, 0x7c, 0xd5, 0x90, 0xb2, 0x17, 0xd2, 0x75, 0x72, 0x21, 0xd5, 0x4c, 0x73, 0xb3, 0xd7,
	0xda, 0xc0, 0x2e, 0xe6, 0xc3, 0xb4, 0x74, 0x5a, 0x98, 0x6e, 0x91, 0xa6, 0x56, 0x2c, 0x4e, 0x59,
	0xa0, 0x51, 0xfd, 0x05, 0xa3, 0x64, 0xa5, 0x40, 0xdd, 0x0b, 0x3b, 0xff, 0x7c, 0x8b, 0xd4, 0x0b,
	0x7b, 0xa1, 0x6f, 0x91, 0xe5, 0x78, 0x12, 0x1d, 0x66, 0xf9, 0xc1, 0x15, 0xd0, 0xc1, 0xfa, 0x24,
	0x45, 0x2f, 0x71, 0x45, 0xef, 0x92, 0xcb, 0x29, 0x8f, 0x43, 0xae, 0x7c, 0x8c, 0x0c, 0x58, 0xb2,
	0xee, 0xae, 0x5a, 0x06, 0x6a, 0xdf, 0x0b, 0xe9, 0x03, 0xb2, 0xae, 0x78, 0x20, 0x12, 0x61, 0xe2,
	0x91, 0xc3, 0x97, 0x0c, 0x9c, 0x66, 0xbc, 0x5c, 0xa2, 0x4b, 0xd6, 0x50, 0x7b, 0x20, 0xa3, 0x84,
	0xc5, 0x53, 0x3f, 0x66, 0x11, 0xc7, 0x9d, 0xa0, 0xe1, 0x5d, 0xcb, 0x79, 0xce, 0x22, 0x4e, 0x1f,
	0x93, 0x56, 0x86, 0x8f, 0x35, 0x0b, 0xb4, 0x9f, 0x70, 0x95, 0xca, 0xd8, 0x8a, 0x2d, 0x1b, 0xb1,
	0x4d, 0x27, 0x66, 0x00, 0xfb, 0x86, 0x6f, 0x84, 0x6f, 0x91, 0x26, 0x0a, 0xa7, 0x5a, 0x71, 0xae,
	0x1f, 0x7a, 0x17, 0x6d, 0xc4, 0x2c, 0xf5, 0x5b, 0x4b, 0x9c, 0x83, 0xf5, 0xbd, 0xea, 0x3c, 0xac,
	0x0f, 0xb9, 0x77, 0xae, 0x08, 0x3d, 0xf5, 0x6a, 0x36, 0xf7, 0x68, 0x5b, 0xe8, 0x69, 0x41, 0xcf,
	0x6b, 0x91, 0x04, 0x32, 0xe4, 0x1e, 0x29, 0xea, 0xf9, 0xde, 0x12, 0xe9, 0x0d, 0xd2, 0xc8, 0xcc,
	0xc1, 0x51, 0xa8, 0x1b, 0x50, 0xdd, 0x19, 0x83, 0x03, 0x91, 0x6b, 0x0a, 0xe4, 0x24, 0xd6, 0x6a,
	0xea, 0x35, 0x8a, 0x9a, 0x76, 0x2d, 0x91, 0xf6, 0xc8, 0xfa, 0xa1, 0x18, 0x8f, 0x7d, 0x2d, 0xcb,
	0xd1, 0x7c, 0xcf, 0x46, 0x13, 0x78, 0x07, 0xb2, 0x18, 0xcd, 0x4f, 0xc8, 0xd5, 0x5c, 0x60, 0x3e,
	0x9c, 0xf7, 0x6c, 0x38, 0x9d, 0xdc, 0x6c, 0x38, 0x6f, 0x93, 0x55, 0x27, 0xed, 0xe2, 0xb9, 0x6a,
	0xdd, 0xb2, 0x12, 0x2e, 0x9e, 0x73, 0xb8, 0xbe, 0x77, 0x69, 0x1e, 0xd7, 0xa7, 0x6d, 0xd2, 0xc8,
	0xbc, 0x81, 0x88, 0x5e, 0xb6, 0x11, 0x45, 0xf3, 0x10, 0xd1, 0x82, 0x26, 0x17, 0x52, 0x5a, 0xd4,
	0xe4, 0x42, 0xda, 0x21, 0x2b, 0xb9, 0x45, 0x88, 0x69, 0xdf, 0xc6, 0xd4, 0xd9, 0x83, 0x98, 0x16,
	0x74, 0xb9, 0xa0, 0xae, 0x17, 0x75, 0xb9, 0xa0, 0xbe, 0x47, 0xa8, 0xc3, 0x1d, 0x33, 0xed, 0x63,
	0xed, 0x6c, 0xd8, 0x02, 0xb0, 0xd0, 0xef, 0x98, 0x7e, 0x6e, 0x8b, 0xa8, 0x9b, 0x67, 0x60, 0x2c,
	0x03, 0x36, 0xf6, 0x35, 0x3b, 0x81, 0x02, 0xf8, 0xc4, 0xc0, 0x2f, 0x59, 0xf8, 0x33, 0xe0, 0x1c,
	0xb0, 0x93, 0xbd, 0x90, 0x3e, 0x24, 0x1b, 0x8a, 0x47, 0x42, 0xcf, 0xa5, 0x6c, 0xd3, 0x55, 0x4c,
	0x24, 0x74, 0x39, 0x67, 0x9f, 0x91, 0x6b, 0x05, 0x91, 0xf9, 0xa4, 0x79, 0x46, 0xd2, 0xcb, 0x24,
	0x67, 0xb3, 0xb6, 0x45, 0x2e, 0x65, 0xf2, 0x2e, 0x6d, 0x57, 0x8c, 0x4c, 0x13, 0x65, 0x5c, 0xde,
	0xe6, 0x91, 0x7d, 0xaf, 0x75, 0x0a, 0xb2, 0x0f, 0xf1, 0xce, 0x7d, 0x82, 0xd4, 0x5d, 0xb5, 0xf1,
	0x76, 0x4e, 0x40, 0xee, 0x8a, 0xda, 0x5c, 0xf2, 0xae, 0x95, 0xb4, 0xb9, 0xec, 0xdd, 0x24, 0xcd,
	0x82, 0x5d, 0x48, 0xdf, 0x3b, 0x06, 0xd7, 0xc8, 0xac, 0x42, 0xfe, 0x8a, 0xfa, 0x5c, 0x02, 0xaf,
	0x97, 0xf4, 0xb9, 0x0c, 0xde, 0x27, 0x6b, 0x19, 0xb2, 0x90, 0xc2, 0xb6, 0xcd, 0x09, 0x82, 0xf3,
	0x1c, 0x3e, 0x28, 0xe4, 0xa4, 0x94, 0xc4, 0x1b, 0xb6, 0x8c, 0x50, 0xa0, 0x90, 0xc5, 0x1e, 0xb4,
	0x3d, 0x94, 0x00, 0xac, 0x73, 0xa7, 0x53, 0x12, 0x38, 0x60, 0x27, 0x85, 0x42, 0x4d, 0x47, 0x22,
	0x99, 0xcb, 0xfa, 0xaf, 0xb0, 0xed, 0x8d, 0x44, 0x32, 0x57, 0xa8, 0xb9, 0xc0, 0x7c, 0xce, 0x6f,
	0x62, 0xdf, 0x43, 0xb9, 0x53, 0x0a, 0xd5, 0x49, 0xbb, 0x8c, 0xdf, 0xc2, 0xfe, 0x61, 0x24, 0x0a,
	0x85, 0x5a, 0xc6, 0xf5, 0xbd, 0xdb, 0xf3, 0x38, 0x53, 0xa8, 0x99, 0x37, 0x90, 0xed, 0x3b, 0xd8,
	0xfa, 0xac, 0x79, 0x2c, 0x54, 0x87, 0x70, 0xb9, 0xde, 0x2a, 0x6a, 0x2a, 0x14, 0x6a, 0x6e, 0x11,
	0x32, 0xfd, 0x2e, 0x36, 0x3f, 0xb4, 0x87, 0x85, 0x9a, 0xef, 0xdd, 0x06, 0xf6, 0x6e, 0x51, 0x97,
	0x0b, 0x6a, 0x8b, 0x54, 0x83, 0x89, 0x52, 0x3c, 0x0e, 0xa6, 0xde, 0x8a, 0x01, 0x64, 0x6b, 0xe8,
	0xb1, 0x47, 0x4a, 0xa6, 0xa9, 0xcf, 0x22, 0x40, 0x7b, 0x4d, 0x6b, 0xc6, 0xd0, 0xb6, 0x0d, 0x09,
	0x6e, 0xea, 0x98, 0x6b, 0x07, 0xb8, 0x6f, 0x6f, 0xea, 0x98, 0xeb, 0x9c, 0x0d, 0xa9, 0x45, 0x76,
	0xd7, 0xb2, 0x35, 0x3b, 0x41, 0xf6, 0x15, 0x52, 0x05, 0xb6, 0x82, 0x3d, 0xf4, 0xec, 0x54, 0xa6,
	0xd9, 0xc9, 0x00, 0xfc, 0x7f, 0x97, 0x5c, 0x06, 0x96, 0x8c, 0xfd, 0xb1, 0x88, 0xb9, 0x3f, 0xe6,
	0xc7, 0x7c, 0xec, 0x3d, 0x68, 0x57, 0xb6, 0xaa, 0x83, 0xa6, 0x66, 0x27, 0x2f, 0xe2, 0x67, 0x22,
	0xe6, 0xcf, 0x80, 0x4a, 0xaf, 0x91, 0x5a, 0x76, 0x47, 0x7a, 0x0f, 0xad, 0x8d, 0x8c, 0x60, 0x6e,
	0x68, 0xd3, 0xef, 0xbd, 0x35, 0xbc, 0xa1, 0xcd, 0x0a, 0x86, 0x88, 0x84, 0x4d, 0x39, 0xf7, 0xde,
	0xb7, 0x43, 0x84, 0x59, 0xc0, 0x98, 0x18, 0xc8, 0x08, 0xc6, 0x10, 0xef, 0x03, 0xeb, 0x10, 0x2e,
	0xcd, 0x6d, 0x32, 0x12, 0x49, 0x22, 0xe2, 0x23, 0x5f, 0x73, 0x15, 0xa5, 0xde, 0x87, 0x79, 0x3c,
	0x81, 0x7a, 0x00, 0x44, 0x7a, 0x87, 0xac, 0x2a, 0x3b, 0x92, 0x72, 0xe5, 0xf3, 0x88, 0x89, 0xb1,
	0xf7, 0x6b, 0x57, 0x5f, 0x48, 0xfe, 0x12, 0xa8, 0xa0, 0x2f, 0x07, 0x9a, 0xf3, 0xf8, 0xc8, 0xea,
	0xcb, 0xa8, 0xe6, 0x14, 0xde, 0x21, 0xab, 0x21, 0x1f, 0x8b, 0x63, 0xae, 0xa6, 0xae, 0x04, 0x7f,
	0x63, 0xf5, 0x39, 0x32, 0x16, 0xe0, 0x4d, 0xd2, 0x14, 0xa9, 0x1f, 0x28, 0x1e, 0x0a, 0xed, 0xc7,
	0x52, 0x73, 0xef, 0x23, 0x13, 0xad, 0x86, 0x48, 0x77, 0x0d, 0xf1, 0xb9, 0xd4, 0x66, 0x12, 0x28,
	0x40, 0xb2, 0x69, 0x03, 0x35, 0x7f, 0x6c, 0x2b, 0x22, 0xc8, 0xf0, 0x38, 0x72, 0xa0, 0x89, 0xdf,
	0x11, 0x64, 0xf9, 0x43, 0x99, 0x0f, 0x36, 0x30, 0xca, 0x7a, 0x8f, 0xcd, 0x1c, 0xd8, 0xea, 0xda,
	0x77, 0x41, 0xd7, 0xbd, 0x0b, 0xba, 0x07, 0xee, 0x5d, 0x30, 0x58, 0xb7, 0xa2, 0x5f, 0x49, 0x95,
	0xcf, 0x55, 0x9c, 0x7e, 0x48, 0xaa, 0x20, 0xef, 0x87, 0x13, 0xee, 0xbd, 0x75, 0xae, 0x8e, 0x8b,
	0x80, 0x7d, 0x32, 0xe1, 0xf4, 0x11, 0xa9, 0x19, 0xb1, 0x84, 0x89, 0xd0, 0xfb, 0xf4, 0x5c, 0xb9,
	0xaa, 0x1d, 0xb7, 0x45, 0x48, 0x3f, 0x25, 0x0d, 0x23, 0x38, 0x31, 0x13, 0x78, 0xe8, 0x7d, 0x76,
	0xae, 0x6c, 0x1d, 0x80, 0x76, 0x60, 0xcf, 0xc5, 0x03, 0xf3, 0x52, 0x08, 0xbd, 0xcf, 0x7f, 0x99,
	0xb8, 0x7d, 0x58, 0x84, 0xf4, 0x31, 0xa9, 0x33, 0xad, 0x59, 0x30, 0x82, 0x13, 0x95, 0x7a, 0x5f,
	0xb4, 0x17, 0xb7, 0xea, 0xfd, 0x2b, 0xd9, 0xf0, 0xbc, 0x23, 0x62, 0xa6, 0xa6, 0xdb, 0x19, 0x62,
	0x50, 0x44, 0xd3, 0x47, 0x84, 0x98, 0x52, 0x10, 0x9a, 0x47, 0xa9, 0xb7, 0x6d, 0x64, 0xbd, 0xd9,
	0xc1, 0x1b, 0xaa, 0x62, 0x4f, 0xf3, 0x68, 0x50, 0x1b, 0xe3, 0xbf, 0x94, 0x7e, 0x41, 0x56, 0x13,
	0x36, 0x35, 0xd3, 0x76, 0xc8, 0x35, 0x13, 0xe3, 0xd4, 0xdb, 0x31, 0xd2, 0xf9, 0x94, 0xbf, 0x6f,
	0xf9, 0x4f, 0x2c, 0x7b, 0xd0, 0x4c, 0x4a, 0x6b, 0xfa, 0x01, 0xa9, 0x99, 0x6e, 0x6e, 0x2c, 0xef,
	0xce, 0xc8, 0xa2, 0x65, 0x68, 0xea, 0x60, 0x18, 0x2a, 0xda, 0xd8, 0xed, 0xfc, 0xbb, 0x42, 0x9a,
	0x65, 0x26, 0x4c, 0x7f, 0xa0, 0xc4, 0x2f, 0xcd, 0xd2, 0x04, 0x48, 0xd9, 0x28, 0xb0, 0x96, 0x4d,
	0xc0, 0x05, 0xa0, 0x1d, 0xae, 0x2f, 0x23, 0x6b, 0x2f, 0xc7, 0x97, 0x1b, 0xcc, 0xe2, 0x59, 0x0d,
	0x66, 0xa9, 0xdc, 0x60, 0x90, 0x65, 0xba, 0xec, 0x85, 0x8c, 0xb5, 0x0b, 0xfd, 0xf5, 0x36, 0x59,
	0x05, 0xd6, 0x21, 0x4b, 0xb9, 0xd3, 0xbc, 0x8c, 0x8f, 0x04, 0x76, 0xb2, 0xc3, 0x52, 0x6e, 0xb5,
	0x77, 0xfe, 0x5c, 0x21, 0x97, 0x66, 0x73, 0x46, 0x29, 0x59, 0x32, 0xd5, 0x6c, 0xf7, 0x66, 0xfe,
	0xd3, 0xab, 0xa4, 0x36, 0x14, 0x63, 0xee, 0xeb, 0x69, 0xc2, 0x71, 0x2f, 0x55, 0x20, 0x1c, 0x4c,
	0x13, 0x0e, 0x02, 0xa9, 0x78, 0x6d, 0x1f, 0x33, 0x4b, 0x03, 0xf3, 0x1f, 0x68, 0xe6, 0x79, 0x65,
	0x7d, 0x36, 0xff, 0x4d, 0xa7, 0x1e, 0xf1, 0xe0, 0x55, 0x3a, 0x89, 0xd0, 0xe1, 0x6c, 0xdd, 0xf9,
	0xdb, 0x05, 0xd2, 0x2c, 0xe7, 0x90, 0x36, 0xc9, 0x42, 0xf6, 0xb6, 0x5a, 0x10, 0x21, 0xfd, 0x9c,
	0xac, 0x98, 0xa3, 0xcb, 0x4f, 0x78, 0x30, 0x81, 0xb3, 0xbb, 0x70, 0xee, 0xd9, 0x35, 0x67, 0xfd,
	0x4b, 0xc4, 0xe7, 0x0d, 0x73, 0xb1, 0xd8, 0x30, 0x91, 0xaa, 0xd0, 0x55, 0xbb, 0x80, 0xa6, 0x8b,
	0x81, 0xb3, 0x9e, 0xe2, 0xaa, 0x74, 0xdb, 0x2c, 0xcf, 0xdc, 0x36, 0xa6, 0x8d, 0x0f, 0x39, 0x2c,
	0x38, 0x3e, 0x31, 0x72, 0x02, 0x84, 0xf0, 0x90, 0xc5, 0xaf, 0x6c, 0xa7, 0xb4, 0x2f, 0x8b, 0x2a,
	0x10, 0x4c, 0x93, 0xbc, 0x41, 0x1a, 0x86, 0xc9, 0xc2, 0x50, 0xf1, 0x34, 0xc5, 0x57, 0x45, 0x1d,
	0x68, 0xdb, 0x96, 0x94, 0x41, 0xdc, 0x65, 0x48, 0x72, 0x88, 0xbb, 0x0a, 0xbb, 0x64, 0xcd, 0x6a,
	0x09, 0x0c, 0xc8, 0x9d, 0xbd, 0x3a, 0xbe, 0x03, 0x40, 0x99, 0xe5, 0xe0, 0xd9, 0xeb, 0x93, 0x8d,
	0x12, 0x3e, 0xdb, 0x99, 0x7d, 0x66, 0xac, 0x15, 0x24, 0x76, 0xdd, 0x26, 0x1f, 0x11, 0xaf, 0x24,
	0x33, 0x92, 0xe3, 0xd0, 0xf5, 0x7f, 0x7b, 0xfd, 0x6e, 0x14, 0xc4, 0xbe, 0x36, 0x5c, 0xb3, 0xc5,
	0x2b, 0xc4, 0x6c, 0xd7, 0x7f, 0xc5, 0xa7, 0x78, 0x0f, 0x5f, 0x84, 0xf5, 0x6f, 0xb9, 0x99, 0x11,
	0x03, 0x35, 0x4d, 0xe0, 0xa6, 0x1f, 0x31, 0x11, 0xfb, 0x13, 0x25, 0xf0, 0x49, 0xd1, 0xb4, 0xf4,
	0x5d, 0x20, 0xbf, 0x54, 0x02, 0x3c, 0x46, 0xe4, 0xcc, 0x1b, 0xd8, 0xbe, 0x2c, 0xd6, 0x2c, 0xf3,
	0xa0, 0xf8, 0x12, 0x86, 0x92, 0x45, 0x99, 0xa1, 0x92, 0x91, 0x7b, 0x5e, 0x58, 0xd2, 0x57, 0x4a,
	0x46, 0x90, 0x19, 0xa7, 0x54, 0xe2, 0xc3, 0xa2, 0x8a, 0x8a, 0x64, 0xe7, 0xef, 0x4b, 0xd9, 0xc7,
	0x06, 0xd7, 0x9a, 0xce, 0x6f, 0x02, 0x6d, 0x52, 0x0f, 0x79, 0x1a, 0x28, 0x61, 0x3e, 0x18, 0x61,
	0xc1, 0x14, 0x49, 0x70, 0xd9, 0xe1, 0xd3, 0x2e, 0x61, 0x0a, 0xee, 0x32, 0x3c, 0x94, 0xf8, 0x26,
	0xdc, 0x67, 0x4a, 0x3f, 0x97, 0x80, 0x4a, 0x14, 0xb4, 0x92, 0x84, 0x2b, 0x7f, 0x12, 0x0b, 0x8d,
	0x87, 0xb4, 0x61, 0xa8, 0xfb, 0x5c, 0xbd, 0x8c, 0x85, 0x39, 0x93, 0x3f, 0x4c, 0x58, 0xac, 0x61,
	0x26, 0xc3, 0xba, 0x72, 0x6b, 0xe8, 0x04, 0x20, 0xe7, 0xcb, 0xa1, 0x1f, 0x71, 0x96, 0x4e, 0x94,
	0x7b, 0x2d, 0xaf, 0x00, 0xf9, 0xc5, 0xf0, 0x1b, 0x4b, 0x74, 0x63, 0xd0, 0x8f, 0x5c, 0x1c, 0x8d,
	0xb4, 0x3b, 0xbc, 0x31, 0xd7, 0xbf, 0x37, 0x84, 0x99, 0x2e, 0x55, 0x3d, 0xab, 0x4b, 0xd5, 0xfe,
	0x77, 0x97, 0x22, 0xe5, 0x2e, 0x75, 0x83, 0x34, 0xb4, 0xd4, 0x6c, 0xec, 0xd4, 0xe2, 0x0b, 0xd8,
	0xd0, 0x50, 0x71, 0x9f, 0x6c, 0x24, 0x13, 0x15, 0x8c, 0xa0, 0x91, 0x49, 0x65, 0x0e, 0x9a, 0x8d,
	0x39, 0x9e, 0x50, 0xc7, 0x7c, 0x01, 0x3c, 0x0c, 0xfe, 0x63, 0xd2, 0x9a, 0x91, 0x29, 0x26, 0xcb,
	0x9e, 0xd1, 0xcd, 0x92, 0x60, 0xa1, 0x1d, 0x3f, 0x20, 0xeb, 0xf9, 0xb4, 0x02, 0x03, 0x06, 0x8a,
	0xd9, 0x13, 0x4b, 0xb3, 0x91, 0x45, 0x6a, 0x9c, 0x29, 0xfa, 0x7f, 0x5c, 0x22, 0xab, 0x4f, 0xf0,
	0xcb, 0xcf, 0xb7, 0xf6, 0x53, 0x24, 0x8d, 0xc8, 0xb2, 0xbd, 0x31, 0xe9, 0xdb, 0xb3, 0xb7, 0x4c,
	0xe9, 0x13, 0x5d, 0x6b, 0xee, 0xfa, 0x73, 0x1f, 0x9a, 0x3a, 0x77, 0xdf, 0x6c, 0xaf, 0xb7, 0xa8,
	0x45, 0xa7, 0x6d, 0x16, 0xb7, 0x11, 0xf8, 0x87, 0x7f, 0xfd, 0xe7, 0x2f, 0x0b, 0x2b, 0x9d, 0x6a,
	0x0f, 0xd7, 0x1f, 0x57, 0xee, 0xd2, 0xd7, 0x64, 0xd9, 0xde, 0xef, 0xf3, 0xe6, 0x4a, 0x1f, 0xea,
	0xce, 0x30, 0xf7, 0xc8, 0x98, 0xb3, 0xe8, 0x39, 0x73, 0xad, 0xd6, 0x86, 0x33, 0xd7, 0xfb, 0x29,
	0xff, 0xae, 0xf7, 0x33, 0xd8, 0xfe, 0x6b, 0xc5, 0x7c, 0xfa, 0xc4, 0x8f, 0x99, 0xb4, 0x95, 0x59,
	0x98, 0xfb, 0xc2, 0x79, 0x86, 0xf5, 0xfd, 0x37, 0xdb, 0xb7, 0x5b, 0x37, 0x9f, 0x72, 0xdd, 0x66,
	0xed, 0x34, 0xe1, 0x81, 0x18, 0x8a, 0xa0, 0x8d, 0x9f, 0xcb, 0xda, 0x72, 0x38, 0xeb, 0xcf, 0x0d,
	0x7a, 0xfd, 0x54, 0x7f, 0x7a, 0x3f, 0xa1, 0xcc, 0xcf, 0x54, 0x92, 0xc5, 0xa7, 0x5c, 0xd3, 0xb5,
	0xa2, 0x3b, 0xe7, 0xfb, 0xf1, 0xd1, 0x9b, 0xed, 0x2b, 0xad, 0x4d, 0xf0, 0x43, 0x8f, 0x78, 0xdb,
	0xb6, 0x43, 0x5d, 0x32, 0xbd, 0x49, 0x4f, 0x0f, 0xc5, 0xce, 0x16, 0xa9, 0x07, 0x32, 0x72, 0x9a,
	0x77, 0x1a, 0x78, 0x14, 0xf6, 0xe1, 0x52, 0xda, 0xaf, 0x7c, 0x5f, 0x43, 0x46, 0x72, 0x78, 0xb8,
	0x6c, 0x2e, 0xaa, 0xf7, 0xff, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x1b, 0xd6, 0xc1, 0xf5, 0xc1, 0x16,
	0x00, 0x00,
}
