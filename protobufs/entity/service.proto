syntax = "proto3";

package entity;

option go_package = "entitypb";
option java_multiple_files = true;
option java_outer_classname = "ServiceProto";
option java_package = "com.entity";

import "document/service.proto";
import "entity/entity.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

// EntityService contains all common interactions for entity documents
service EntityService {
  rpc Create(EntityCreatePayload) returns (EntityResponse) {
    option (google.api.http) = {
      post: "/v1/entities"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description: "Creates an entity"
    };
  }
  rpc Update(EntityUpdatePayload) returns (EntityResponse) {
    option (google.api.http) = {
      put: "/v1/entities/{document_id}"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description: "Updates an entity"
    };
  }
  rpc Get(GetRequest) returns (EntityResponse) {
    option (google.api.http) = {
      get: "/v1/entities/{document_id}"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description: "Get the current entity"
    };
  }
  // Entity Relation Get
  rpc GetEntityByRelationship(GetRequestRelationship) returns (EntityResponse) {
    option (google.api.http) = {
      get: "/v1/relationships/{relationship_id}/entity"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description: "Get entity from business partner"
    };
  }
  // Entity Relation Share
  rpc Share(RelationshipPayload) returns (RelationshipResponse) {
    option (google.api.http) = {
      post: "/v1/entities/{document_id}/share"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description: "Share the entity document with others"
    };
  }
  // Entity Relation Revoke
  rpc Revoke(RelationshipPayload) returns (RelationshipResponse) {
    option (google.api.http) = {
      post: "/v1/entities/{document_id}/revoke"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description: "revoke an entity document share"
    };
  }
}

message GetRequest {
  string document_id = 1;
}

message GetRequestRelationship {
  string relationship_id = 1;
}

message GetVersionRequest {
  string identifier = 1;
  string version = 2;
}

message EntityCreatePayload {
  repeated string read_access = 1;
  repeated string write_access = 2;
  EntityData data = 3;
  // custom attributes
  map<string, document.Attribute> attributes = 4;
}

message EntityUpdatePayload {
  string document_id = 1;
  repeated string read_access = 2;
  repeated string write_access = 3;
  EntityData data = 4;
  // custom attributes
  map<string, document.Attribute> attributes = 5;
}

message EntityResponse {
  document.ResponseHeader header = 1;
  EntityDataResponse data = 2;
  // custom attributes
  map<string, document.Attribute> attributes = 3;
}

message Relationship {
  string identity = 1;
  bool active = 2;
}

// EntityData is the default entity schema
message EntityData {
  string identity = 1;
  string legal_name = 2;
  // address
  repeated Address addresses = 3;
  // tax information
  repeated PaymentDetail payment_details = 4;
  // Entity contact list
  repeated Contact contacts = 5;
}

// Entity Relationships
message EntityDataResponse {
  EntityData entity = 1;
  repeated Relationship relationships = 2;
}

message RelationshipPayload {
  // entity identifier
  string document_id = 1;
  string target_identity = 2;
}

message RelationshipData {
  // DID of relationship owner
  string owner_identity = 1;
  // DID of target identity
  string target_identity = 2;
  // identifier of Entity whose data can be accessed via this relationship
  string entity_identifier = 3;
}

message RelationshipResponse {
  document.ResponseHeader header = 1;
  repeated RelationshipData relationship = 2;
}
