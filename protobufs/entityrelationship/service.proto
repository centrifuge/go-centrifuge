syntax = "proto3";

package entityrelationship;

option go_package = "entityrelationshipb";
option java_multiple_files = true;
option java_outer_classname = "ServiceProto";
option java_package = "com.entityrelationship";

import "entity/service.proto";
import "document/service.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";


// DocumentService contains all common interactions for entity document
service DocumentService {
    rpc Share(EntityRelationshipCreatePayload) returns (EntityRelationshipResponse) {
        option (google.api.http) = {
      post: "/entity/{data.owner_identity}/share/{data.target_identity}"
      body: "*"
    };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description: "Creates an entity relationship"
    };
    }
    rpc Revoke(EntityRelationshipUpdatePayload) returns (EntityRelationshipResponse) {
        option (google.api.http) = {
      put: "/entity/{data.owner_identity}/{data.target_identity}"
      body: "*"
    };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description: "Revokes the access token for the target identity on the relevant entity relationship"
    };
    }
    rpc Get(EntityRelationshipData) returns (entity.EntityData) {
        option (google.api.http) = {
      get: "/entityrelationship/{owner_identity}"
    };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description: "Get entity data"
    };
    }
}

message EntityRelationshipData {
string owner_identity = 1;
string target_identity = 2;
}

//combine these two?
message EntityRelationshipCreatePayload {
EntityRelationshipData data = 1;
}

message EntityRelationshipUpdatePayload {
EntityRelationshipData data = 1;
}

message EntityRelationshipResponse {
document.ResponseHeader header = 1;
EntityRelationshipData data = 2;
}

