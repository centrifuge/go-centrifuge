syntax = "proto3";

package document;

option go_package = "documentpb";
option java_multiple_files = true;
option java_outer_classname = "ServiceProto";
option java_package = "com.document";

import "google/api/annotations.proto";
import "precise-proofs/proofs/proto/proof.proto";
import "protoc-gen-swagger/options/annotations.proto";

// DocumentService contains all common interactions for documents
service DocumentService {
  rpc CreateDocumentProof(CreateDocumentProofRequest) returns (DocumentProof) {
    option (google.api.http) = {
      post: "/document/{identifier}/proof"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description: "Creates a list of precise proofs for the specified fields of the document given by ID"
    };
  }
  rpc CreateDocumentProofForVersion(CreateDocumentProofForVersionRequest) returns (DocumentProof) {
    option (google.api.http) = {
      post: "/document/{identifier}/{version}/proof"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description: "Creates a list of precise proofs for the specified fields of the given version of the document given by ID"
    };
  }
  rpc UpdateDocumentAccessToken(UpdateDocumentAccessTokenRequest) returns (UpdateDocumentAccessTokenResponse) {
    option (google.api.http) = {
      post: "/document/{delegating_document_identifier}/update_access_token"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description: "Appends an access token to the indicated delegating document"
    };
  }
}

message UpdateDocumentAccessTokenRequest {
  // The document which should contain the access token referenced below
  bytes delegating_document_identifier = 1;
  // The access token to be appended to the indicated document above
  AccessToken access_token = 2;
}

message UpdateDocumentAccessTokenResponse{
  bool accepted = 1;
}

message AccessToken {
  // The identifier is an internal 256bit word
  bytes identifier = 1;
  // The identity granting access to the document
  bytes granter = 3;
  // The identity being granted access to the document
  bytes grantee = 4;
  // Role identifier is the identifier on the read rule that this token should be mapped to
  bytes role_identifier = 5;
  // Original identifier of the document
  bytes document_identifier = 2;
  // Cryptographic signature that an access token is valid
  bytes signature = 6;
  // The public key of the signed message
  bytes key = 7;
}

message CreateDocumentProofRequest {
  string identifier = 1;
  string type = 2;
  repeated string fields = 3;
}

// ResponseHeader contains a set of common fields for most documents
message ResponseHeader {
  string document_id = 1;
  string version_id = 2;
  string state = 3;
}

message DocumentProof {
  ResponseHeader header = 1;
  repeated Proof field_proofs = 2;
}

message Proof {
  string property = 1;
  string value = 2;
  string salt = 3;
  // hash is filled if value & salt are not available
  string hash = 4;
  repeated string sorted_hashes = 5;
}

message CreateDocumentProofForVersionRequest {
  string identifier = 1;
  string type = 2;
  string version = 3;
  repeated string fields = 4;
}
