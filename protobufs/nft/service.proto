syntax = "proto3";

package nft;

option go_package = "nftpb";
option java_multiple_files = true;
option java_outer_classname = "ServiceProto";
option java_package = "com.nft";

import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

// NFTService contains all common interactions for NFTs
service NFTService {
  rpc MintInvoiceUnpaidNFT(NFTMintInvoiceUnpaidRequest) returns (NFTMintResponse) {
    option (google.api.http) = {
      post: "/invoice/{identifier}/mint/unpaid"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description: "Mints an NFT out of an Unpaid Centrifuge Invoice"
    };
  }
  rpc OwnerOf(OwnerOfRequest) returns (OwnerOfResponse) {
    option (google.api.http) = {
      get: "/nfts/{token_id}/registry/{registry_address}/owner"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description: "Get the owner of an NFT"
    };
  }
}

message ResponseHeader {
  string job_id = 5;
}

message OwnerOfRequest {
  string token_id = 1;
  string registry_address = 2;
}

message OwnerOfResponse {
  string token_id = 1;
  string registry_address = 2;
  string owner = 3;
}

message NFTMintInvoiceUnpaidRequest {
  // Invoice Document identifier
  string identifier = 1;
  // Deposit address for NFT Token created
  string deposit_address = 2;
}

message NFTMintResponse {
  ResponseHeader header = 1;
}
